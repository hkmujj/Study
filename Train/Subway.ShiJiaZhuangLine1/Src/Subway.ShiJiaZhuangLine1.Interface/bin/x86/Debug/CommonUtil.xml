<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommonUtil</name>
    </assembly>
    <members>
        <member name="T:CommonUtil.Controls.Arrows">
            <summary>
            箭头
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Arrows.Direction">
            <summary>
            箭头方向
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Arrows.DefaultBoundSize">
            <summary>
            默认的边框大小
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Arrows.ContentColor">
            <summary>
            默认Color.White
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Arrows.m_Graph">
            <summary>
            m_Graph
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Arrows.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Arrows.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.Button.BtnBehavierClickStrategy">
            <summary>
            按键的 Click 策略
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.BtnBehavierClickStrategy.#ctor(CommonUtil.Controls.Button.GDIButton)">
            <summary>
            
            </summary>
            <param name="control"></param>
        </member>
        <member name="P:CommonUtil.Controls.Button.BtnBehavierClickStrategy.Control">
            <summary>
            所属控件 
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.BtnBehavierClickStrategy.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.BtnBehavierClickStrategy.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.BtnBehavierClickStrategy.OnDraw(System.Drawing.Graphics)">
            <summary>
            OnDraw
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.Button.BtnManager">
            <summary>
            按键管理. 用于产生 Click事件
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.BtnManager.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.BtnManager.LastMouseDownBtn">
            <summary>
            上次鼠标点下的按键
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.Button.BtnBehavierNormalStrategy">
            <summary>
            普通策略 , 没有click事件
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.BtnBehavierNormalStrategy.#ctor(CommonUtil.Controls.Button.GDIButton)">
            <summary>
            
            </summary>
            <param name="btn"></param>
        </member>
        <member name="P:CommonUtil.Controls.Button.BtnBehavierNormalStrategy.Control">
            <summary>
            所属控件 
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.BtnBehavierNormalStrategy.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.BtnBehavierNormalStrategy.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.BtnBehavierNormalStrategy.OnDraw(System.Drawing.Graphics)">
            <summary>
            OnDraw
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.Button.GDIButton">
            <summary>
            类似 Button 的控件 
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Button.GDIButton.ButtonDownEvent">
            <summary>
            鼠标按下的事件
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Button.GDIButton.ButtonUpEvent">
            <summary>
            鼠标起的事件
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Button.GDIButton.ButtonClickEvent">
            <summary>
            TODO 鼠标点击事件
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Button.GDIButton.CurrentMouseStateChanged">
            <summary>
            CurrentMouseStateChanged;
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.CurrentMouseState">
            <summary>
            当前按键区域的鼠标状态[DefaultValue(MouseState.MouseUp)]
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.ContentTextControl">
            <summary>
            按键内容的文本控件
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.IsEnable">
            <summary>
            是否可用[DefaultValue(true)]
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.Text">
            <summary>
            按键上的文本
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.TextColor">
            <summary>
            控件的字体颜色
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.TextControl">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.InnnerControl">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.Padding">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.BackImage">
            <summary>
            背景图片
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Button.GDIButton.BtnBehavierStrategy">
            <summary>
            按键的使用策略
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.SetButtonRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="weight"></param>
            <param name="height"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.SetButtonColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.SetButtonText(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.SetTextStyle(System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            设置文本的格式 
            </summary>
            <param name="size"></param>
            <param name="format"></param>
            <param name="bold"></param>
            <param name="font"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.SetButtonTextColor(System.Drawing.SolidBrush)">
            <summary>
            
            </summary>
            <param name="textColor"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.OnButtonDown">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.OnButtonUp">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.SetButtonPic(System.String)">
            <summary>
            
            </summary>
            <param name="picpath"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.SetButtonPic(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.PerformClick">
            <summary>
            生成按钮的 Click 事件。
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.Translate(System.Single,System.Single)">
            <summary>
            平移
            </summary>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.Inflate(System.Single,System.Single)">
            <summary>
            将此  放大指定量。
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.DrawDefault(System.Drawing.Graphics)">
            <summary>
            常规画图
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.DrawBackImage(System.Drawing.Graphics)">
            <summary>
            画背景图片
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.DrawOutLine(System.Drawing.Graphics)">
            <summary>
            画轮廓
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.DrawText(System.Drawing.Graphics)">
            <summary>
            绘button的字
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Button.GDIButton.DrawText(System.Drawing.Graphics,System.Boolean)">
            <summary>
            绘button的字
            </summary>
            <param name="g"></param>
            <param name="needDrawBk"></param>
        </member>
        <member name="T:CommonUtil.Controls.Button.IBtnBehavierStrategy">
            <summary>
            按键的策略
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.ControlFacotry">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.ControlFacotry.CreateControl``1(System.Action{``0})">
            <summary>
            
            </summary>
            <param name="initAction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Controls.DefaultRectTextBehavierStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.DefaultRectTextBehavierStrategy.#ctor(CommonUtil.Controls.GDIRectText)">
            <summary>
            
            </summary>
            <param name="control"></param>
        </member>
        <member name="P:CommonUtil.Controls.DefaultRectTextBehavierStrategy.Control">
            <summary>
            所属控件 
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.DefaultRectTextBehavierStrategy.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.DefaultRectTextBehavierStrategy.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.DefaultRectTextBehavierStrategy.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.RectangleImage">
            <summary>
            RectangleImage, 矩形图片
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.RectangleImage.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.RectangleImage.OnDraw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.IRectTextBehavierStrategy">
            <summary>
            GDIRectText 的策略
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.Label">
            <summary>
            无边框，无背景的字符
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Label.Brush">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Label.Font">
            <summary>
            文本字体
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Label.Text">
            <summary>
            文本内容
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Label.Format">
            <summary>
             文本格式, 默认居中
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Label.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Label.OnDraw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.LockBitmap">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.LockBitmap.Pixels">
            <summary>
            所有像素点颜色
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.LockBitmap.Depth">
            <summary>
            颜色值深度， 8， 16， 32
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.LockBitmap.Width">
            <summary>
            图像宽度
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.LockBitmap.Height">
            <summary>
            图像高度
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.LockBitmap.#ctor(System.Drawing.Bitmap)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:CommonUtil.Controls.LockBitmap.LockBits">
            <summary>
            Lock bitmap data
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.LockBitmap.UnlockBits">
            <summary>
            Unlock bitmap data
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.LockBitmap.GetPixel(System.Int32,System.Int32)">
            <summary>
            Get the color of the specified pixel
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.LockBitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Set the color of the specified pixel
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
        </member>
        <member name="M:CommonUtil.Controls.LockBitmap.IsValidCoordinate(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Controls.Padding">
            <summary>
            表示与用户界面 (UI) 元素关联的空白或边距信息。
            </summary>
        </member>
        <member name="E:CommonUtil.Controls.Padding.PaddingChanged">
            <summary>
            PaddingChanged
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Padding.Empty">
            摘要:
            <summary>
            提供没有空白的 System.Windows.Forms.Padding 对象。
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Padding.#ctor(System.Int32)">
             <summary>
                     ///
             摘要:
                 初始化 System.Windows.Forms.Padding 类的新实例，对所有边缘使用提供的空白大小。
            
             参数:
               all:
                 要用于所有边缘的空白的像素数目。
             </summary>
             <param name="all"></param>
        </member>
        <member name="M:CommonUtil.Controls.Padding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             ///
             摘要:
                 初始化 System.Windows.Forms.Padding 类的新实例，对每个边缘使用各自的空白大小。
            
             参数:
               left:
                 左边缘的空白大小（以像素为单位）。
            
               top:
                 上边缘的空白大小（以像素为单位）。
            
               right:
                 右边缘的空白大小（以像素为单位）。
            
               bottom:
                 下边缘的空白大小（以像素为单位）。
             </summary>
             <param name="left"></param>
             <param name="top"></param>
             <param name="right"></param>
             <param name="bottom"></param>
        </member>
        <member name="P:CommonUtil.Controls.Padding.Bottom">
             <summary>
             ///
             摘要:
                 获取或设置下边缘的空白值。
            
             返回结果:
                 下边缘的空白值（以像素为单位）。
             </summary>
        </member>
        <member name="P:CommonUtil.Controls.Padding.Horizontal">
             <summary>
             ///
             摘要:
                 获取左边缘和右边缘的组合空白。
            
             返回结果:
                 获取 System.Windows.Forms.Padding.Left 和 System.Windows.Forms.Padding.Right
                 空白值的总和（以像素为单位）。
             </summary>
        </member>
        <member name="P:CommonUtil.Controls.Padding.Left">
             <summary>
             ///
             摘要:
                 获取或设置左边缘的空白值。
            
             返回结果:
                 左边缘的空白值（以像素为单位）。
             </summary>
        </member>
        <member name="P:CommonUtil.Controls.Padding.Right">
             <summary>
             ///
             摘要:
                 获取或设置右边缘的空白值。
            
             返回结果:
                 右边缘的空白值（以像素为单位）。
             </summary>
        </member>
        <member name="P:CommonUtil.Controls.Padding.Top">
             <summary>
              ///
             摘要:
                 获取或设置上边缘的空白值。
            
             返回结果:
                 上边缘的空白值（以像素为单位）。
             </summary>
        </member>
        <member name="P:CommonUtil.Controls.Padding.Vertical">
             <summary>
             ///
             摘要:
                 获取上边缘和下边缘的组合空白。
            
             返回结果:
                 获取 System.Windows.Forms.Padding.Top 和 System.Windows.Forms.Padding.Bottom
                 空白值的总和（以像素为单位）。
             </summary>
        </member>
        <member name="M:CommonUtil.Controls.Padding.OnPaddingChanged(CommonUtil.Controls.Padding)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:CommonUtil.Controls.Decorator.CommonInnerControlDecorator">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Decorator.CommonInnerControlDecorator.m_CommonInnerControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Decorator.CommonInnerControlDecorator.#ctor(CommonUtil.Controls.CommonInnerControlBase)">
            <summary>
            
            </summary>
            <param name="innerControl"></param>
        </member>
        <member name="M:CommonUtil.Controls.Decorator.CommonInnerControlDecorator.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Decorator.CommonInnerControlDecorator.OnPaint(System.Drawing.Graphics)">
            <summary>
            刷新并绘图, 会调用 Refresh
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Decorator.CommonInnerControlDecorator.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Decorator.CommonInnerControlDecorator.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="T:CommonUtil.Controls.Decorator.CommonInnerControlGlintDecorator">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Decorator.CommonInnerControlGlintDecorator.Period">
            <summary>
            闪烁周期，越大越慢, 默认为uint.MaxValue 不闪烁, 为0 一直不显示 
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Decorator.CommonInnerControlGlintDecorator.NeedRefresh">
            <summary>
            当闪烁到灭时，是否需要 OnPaint  是否需要 调用 Refresh
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Decorator.CommonInnerControlGlintDecorator.#ctor(CommonUtil.Controls.CommonInnerControlBase)">
            <summary>
            
            </summary>
            <param name="innerControl"></param>
        </member>
        <member name="M:CommonUtil.Controls.Decorator.CommonInnerControlGlintDecorator.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Decorator.CommonInnerControlGlintDecorator.OnPaint(System.Drawing.Graphics)">
            <summary>
            刷新并绘图, 会调用 Refresh
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.CommonInnerControlBase">
            <summary>
            ICommonInnerControl 的基类, 提供大小的设置方法
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonInnerControlBase.m_OutLineRectangle">
            <summary>
            m_OutLineRectangle
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.RefreshAction">
            <summary>
            刷新的,
            object = this
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.LocationChangeMatrix">
            <summary>
            Location 变化的矩阵
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.LocationOffset">
            <summary>
            location 的平移量
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.SizeChangeMatrix">
            <summary>
            大小 变化的矩阵
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.SizeChangedMultiple">
            <summary>
            大小变化的倍数
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.Visible">
            <summary>
            是否可见
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.IsEnable">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.Tag">
            <summary>
            获取或设置包含有关控件的数据的对象。
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.Location">
            <summary>
            起始点, 绝对位置 
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.Size">
            <summary>
            大小 
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.Reverse">
            <summary>
            反转自身
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.Translate(System.Single,System.Single)">
            <summary>
            平移
            </summary>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.Translate(System.Drawing.PointF)">
            <summary>
            平移
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.Inflate(System.Single,System.Single)">
            <summary>
            将此  放大指定量。
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.Inflate(System.Drawing.Size)">
            <summary>
            将此 放大指定量。
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.Refresh">
            <summary>
            刷新, 调用 RefreshAction
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.OnPaint(System.Drawing.Graphics)">
            <summary>
            刷新并绘图, 会调用 Refresh
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.Contains(System.Drawing.Point)">
            <summary>
            是否包含一个点
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.Contains(System.Int32,System.Int32)">
            <summary>
            是否包含一个点
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="P:CommonUtil.Controls.CommonInnerControlBase.OutLineRectangle">
            <summary>
            轮廓大小
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonInnerControlBase.OutLineChanged">
            <summary>
            OutLineRectangle 变化 
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.CommonInnerControlBase.SetOutLine(System.Drawing.Rectangle)">
            <summary>
            设置轮廓, 不产生 OutLineChanged 事件
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.CommonResouce">
            <summary>
            公共资源 
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.BackgroudBrush">
            <summary>
            //背景画刷 119, 136, 153
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.GreenBrush">
            <summary>
            绿色画刷 0, 255, 0
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.RedBrush">
            <summary>
            红色画刷 255, 0, 0)
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.BlueBrush">
            <summary>
            蓝色画刷 0, 0, 255
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.BlackBrush">
            <summary>
            黑色画刷 0, 0, 0
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.WhiteBrush">
            <summary>
            白色画刷 new SolidBrush(Color.FromArgb(255, 255, 255));//
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.GrayBrush">
            <summary>
            灰色画刷  121, 121, 121
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.BackgroudPen">
            <summary>
            背景画笔
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.BlackPen">
            <summary>
            黑色画笔, 用于选择时的边框
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.SelectedPen">
            <summary>
            选中时的边框
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.LinePen">
            <summary>
            粗条画笔
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.SLinePen">
            <summary>
            细线条画笔
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.MLinePen">
            <summary>
            中线条画笔
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.CommonResouce.DefalutFont">
            <summary>
            默认字体 
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.Coordinate">
            <summary>
            坐标系
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Coordinate.#ctor(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="origin"></param>
        </member>
        <member name="P:CommonUtil.Controls.Coordinate.Origin">
            <summary>
            坐标原点
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Coordinate.Color">
            <summary>
            坐标轴的颜色, 默认白色
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Coordinate.XAxis">
            <summary>
            X 轴
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Coordinate.YAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Coordinate.XOffsets">
            <summary>
            X偏移, 左和右
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Coordinate.YOffsets">
            <summary>
            Y偏移, 上和下
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Coordinate.IsOriginTextVisible">
            <summary>
            坐标原点的 0 是否可见, 默认可见
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Coordinate.OnDraw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Coordinate.OnPaint(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.FormatStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.FormatStyle.DirectionRightToLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.FormatStyle.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.FormatStyle.DirectionLeftToRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.FormatStyle.StrFont">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.GDIDataGrid">
            <summary>
            网格控件
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIDataGrid.GridPen">
            <summary>
            中间线的颜色
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIDataGrid.OutLinePen">
            <summary>
            边框
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.GDIDataGrid.m_Widths">
            <summary>
            宽度
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.GDIDataGrid.m_Hights">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIDataGrid.DataTable">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.#ctor(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            
            </summary>
            <param name="location"></param>
            <param name="size"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.AddColumn(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="columnName"></param>
            <param name="columnWidth"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.AddRow(System.Int32)">
            <summary>
            
            </summary>
            <param name="rowHight"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.SetRowHight(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="row">从 0 开始</param>
            <param name="hight"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.SetColumWidth(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="column">从 0 开始</param>
            <param name="width"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.GetRectangleOf(System.Int32,System.Int32)">
            <summary>
            获得row 行 column 列的大小和位置
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.DeleteRow(System.Int32)">
            <summary>
            
            </summary>
            <param name="idx"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.DeleteColumn(System.Int32)">
            <summary>
            
            </summary>
            <param name="idx"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIDataGrid.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.GDIRectText">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.TextBrush">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.BKBrush">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.BKImage">
            <summary>
            背景图
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.Isdrawrectfrm">
            <summary>
            是否绘制外边框
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.RectTextBehavierStrategy">
            <summary>
            文本的行为策略
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.NeedDarwOutline">
            <summary>
            是否需要轮廓
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.DrawFont">
            <summary>
            默认字体 "Arial", 12
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.BkColor">
            <summary>
            背景色, 默认 Color.Black
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.OutLinePen">
            <summary>
            轮廓的pen, 默认Color.White
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.Bold">
            <summary>
            字体是否加粗
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.TextFormat">
            <summary>
            文本对齐的信息
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.TextColor">
            <summary>
            字体颜色, 默认(Color.White)
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.GDIRectText.BackColorVisible">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetTextStyle(System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="format"></param>
            <param name="bold"></param>
            <param name="font"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetBkColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetBkColor(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetDrawFrm(System.Boolean)">
            <summary>
            
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetLabel(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="size"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetLabelOn(System.Boolean)">
            <summary>
            
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetTextColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetTextColor(System.Drawing.SolidBrush)">
            <summary>
            
            </summary>
            <param name="theTextColor"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetTextRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetLinePen(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="weight"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.SetImage(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="img"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.DrawText(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.DrawOutline(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.GDIRectText.DrawBk(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.Grid.GridBase">
            <summary>
            网格的控件
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridBase.IsReversalHorizontal">
            <summary>
            是否反转横向
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridBase.ColoumnCellCount">
            <summary>
            格子的列个数
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridBase.RowCellCount">
            <summary>
            格子的行个数
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridBase.ItemFactory">
            <summary>
            内部元素的工厂
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridBase.LineVisible">
            <summary>
            网格线是否可见
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridBase.CellSize">
            <summary>
            格子的大小 
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Grid.GridBase.m_Children">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Grid.GridBase.m_AllItems">
            <summary>
            所有的元素, 用于绘图
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridBase.AllItems">
            <summary>
            所有的元素
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridBase.Item(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.#ctor(System.Drawing.Point,System.Drawing.Size,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="location"></param>
            <param name="size"></param>
            <param name="coloumnCellCount">列格子的个数, 最小值默认 1</param>
            <param name="rowCellCount">行格子的个数, 最小值默认 1</param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.AddIntersectionItem(System.Int32,System.Int32,CommonUtil.Controls.Grid.GridItemType)">
            <summary>
            增加一个交点的内容 
            </summary>
            <param name="rowIdx"></param>
            <param name="columnIndx"></param>
            <param name="itemType"></param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.AddIntersectionItem(System.Int32,System.Int32,CommonUtil.Controls.Grid.GridItemBase)">
            <summary>
            增加一个交点的内容 
            </summary>
            <param name="rowIdx"></param>
            <param name="columnIndx"></param>
            <param name="itemBase"></param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.RemoveIntersectionItem(System.Int32,System.Int32)">
            <summary>
            删除一个交点的内容
            </summary>
            <param name="rowIdx"></param>
            <param name="columnIndx"></param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.GetIntersectionLocationF(System.Int32,System.Int32)">
            <summary>
            获得第 rowIdx 行, colIdx列交点的坐标,如果是 GridLine则返回交点位置, 如果是GridCell则返回交点格子的左上角坐标
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.GetItemBoundF(System.Int32,System.Int32)">
            <summary>
            获得 内部 元素的大小 
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.GetItemBound(System.Int32,System.Int32)">
            <summary>
            获得 内部 元素的大小 
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.GetIntersectionCenter(System.Int32,System.Int32)">
            <summary>
            获得交点的中心点位置
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.GetIntersectionCenterF(System.Int32,System.Int32)">
            <summary>
            获得交点的中心点位置
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.GetIntersectionLocation(System.Int32,System.Int32)">
            <summary>
            获得第 rowIdx 行, colIdx列交点的坐标, 如果是 GridLine则返回交点位置, 如果是GridCell则返回交点格子的左上角坐标
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.OnPaint(System.Drawing.Graphics)">
            <summary>
            刷新并绘图, 会调用 Refresh
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.OnMouseDown(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.OnMouseUp(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridBase.Reverse">
            <summary>
            反转自身
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.Grid.GridCell.GridCell">
            <summary>
            Gridcell
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridCell.GridCell.#ctor(System.Drawing.Point,System.Drawing.Size,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="location"></param>
            <param name="size"></param>
            <param name="coloumnCellCount"></param>
            <param name="rowCellCount"></param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridCell.GridCell.GetItemBoundF(System.Int32,System.Int32)">
            <summary>
            获得 内部 元素的大小 
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridCell.GridCell.GetItemBound(System.Int32,System.Int32)">
            <summary>
            获得 内部 元素的大小 
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridCell.GridCell.GetIntersectionCenter(System.Int32,System.Int32)">
            <summary>
            获得交点的中心点位置
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridCell.GridCell.GetIntersectionCenterF(System.Int32,System.Int32)">
            <summary>
            获得交点的中心点位置
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Controls.Grid.GridItemBase">
            <summary>
            grid 的元素
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridItemBase.Parent">
            <summary>
            父容器
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Grid.GridItemBase.RowIndexChanged">
            <summary>
            RowIndex
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Grid.GridItemBase.ColumnIndexChanged">
            <summary>
            ColumnIndex
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridItemBase.ContentAutoSize">
            <summary>
            当outline变化时内部控件是否能自动改变大小 
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridItemBase.ContentSize">
            <summary>
            内部元素的大小 
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridItemBase.ItemType">
            <summary>
            ItemType
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridItemBase.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridItemBase.ColumnIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridItemBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridItemBase.GetInnerCtolLocationOffset">
            <summary>
            获取 内部 控件的 位置偏移
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Controls.Grid.GridItemBaseT`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:CommonUtil.Controls.Grid.GridItemBaseT`1.m_InnerContrl">
            <summary>
            m_InnerContrl
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridItemBaseT`1.OnDraw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridItemBaseT`1.OnPaint(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridItemBaseT`1.GetInnerContrl">
            <summary>
            获取内部的控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridItemBaseT`1.Contains(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Controls.Grid.GridItemType">
            <summary>
            GridItemType
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Grid.GridItemType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Grid.GridItemType.Roudness">
            <summary>
            圆圈
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.Grid.GridLine.GridLine">
            <summary>
            网格线
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridLine.GridLine.#ctor(System.Drawing.Point,System.Drawing.Size,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="location"></param>
            <param name="size"></param>
            <param name="coloumnCellCount">列格子的个数, 最小值默认 1</param>
            <param name="rowCellCount">行格子的个数, 最小值默认 1</param>
        </member>
        <member name="P:CommonUtil.Controls.Grid.GridLine.GridLine.LinePen">
            <summary>
            画线的笔
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridLine.GridLine.GetItemBoundF(System.Int32,System.Int32)">
            <summary>
            获得 内部 元素的大小 
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridLine.GridLine.GetItemBound(System.Int32,System.Int32)">
            <summary>
            获得 内部 元素的大小 
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridLine.GridLine.GetIntersectionCenter(System.Int32,System.Int32)">
            <summary>
            获得交点的中心点位置
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridLine.GridLine.GetIntersectionCenterF(System.Int32,System.Int32)">
            <summary>
            获得交点的中心点位置
            </summary>
            <param name="rowIdx"></param>
            <param name="colIdx"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridLine.GridLine.OnDraw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Grid.GridLine.GridLine.OnPaint(System.Drawing.Graphics)">
            <summary>
            刷新并绘图, 会调用 Refresh
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.Grid.IGridItemFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.IGridItemFactory.CreateItem(CommonUtil.Controls.Grid.GridItemType)">
            <summary>
            创建一个 Grid的元素
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Controls.Grid.Items.GridButtonItem">
            <summary>
            GridButtonItem
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.Items.GridButtonItem.Button">
            <summary>
            文本的实例 
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.Items.GridButtonItem.#ctor">
            <summary>
            construct
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.Items.GridButtonItem.OnMouseDown(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Grid.Items.GridButtonItem.OnMouseUp(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:CommonUtil.Controls.Grid.Items.GridButtonItem.ContentSize">
            <summary>
            内部元素的大小 
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.Grid.Items.GridTextItem">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.Items.GridTextItem.RectText">
            <summary>
            文本的实例 
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Grid.Items.GridTextItem.#ctor">
            <summary>
            construct
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Grid.Items.GridTextItem.ContentSize">
            <summary>
            内部元素的大小 
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.IBehavierStratege`1">
            <summary>
            控件的行为策略
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:CommonUtil.Controls.IBehavierStratege`1.Control">
            <summary>
            所属控件 
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.IBehavierStratege`1.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.IBehavierStratege`1.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.IBehavierStratege`1.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.ICommonInnerControl">
            <summary>
            公共的控件
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.ICommonInnerControl.Location">
            <summary>
            起始点, 绝对位置 
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.ICommonInnerControl.Size">
            <summary>
            大小 
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.ICommonInnerControl.OutLineRectangle">
            <summary>
            轮廓大小
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.ICommonInnerControl.Reverse">
            <summary>
            反转自身
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.ICommonInnerControl.Translate(System.Single,System.Single)">
            <summary>
            平移
            </summary>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:CommonUtil.Controls.ICommonInnerControl.Translate(System.Drawing.PointF)">
            <summary>
            平移
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:CommonUtil.Controls.ICommonInnerControl.Inflate(System.Single,System.Single)">
            <summary>
            将此  放大指定量。
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:CommonUtil.Controls.ICommonInnerControl.Inflate(System.Drawing.Size)">
            <summary>
            将此 放大指定量。
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:CommonUtil.Controls.IInnerControl">
            <summary>
            内部控件需要的实现的接口
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.IInnerControl.RefreshAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.IInnerControl.Refresh">
            <summary>
            刷新, 调用 RefreshAction
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.IInnerControl.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.IInnerControl.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.IInnerControl.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.IInnerControl.OnDraw(System.Drawing.Graphics)">
            <summary>
            只绘图, 不刷新
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.IInnerControl.OnPaint(System.Drawing.Graphics)">
            <summary>
            刷新并绘图, 会调用 Refresh
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.IInnerControl.Contains(System.Drawing.Point)">
            <summary>
            是否包含一个点
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:CommonUtil.Controls.IInnerControl.Tag">
            <summary>
            获取或设置包含有关控件的数据的对象。
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.Line">
            <summary>
            直线
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Line.StartPoint">
            <summary>
            起始点
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Line.EndPoint">
            <summary>
            结束点
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Line.Width">
            <summary>
            线宽度, 默认为2
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Line.Color">
            <summary>
            线的颜色 默认白色
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Line.m_Pen">
            <summary>
            m_Pen
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Line.LinePen">
            <summary>
            线的画笔
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Line.#ctor(System.Drawing.Point,System.Drawing.Point,System.Single)">
            <summary>
            
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="width"></param>
        </member>
        <member name="M:CommonUtil.Controls.Line.#ctor(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
        </member>
        <member name="M:CommonUtil.Controls.Line.#ctor(System.Single)">
            <summary>
            
            </summary>
            <param name="width"></param>
        </member>
        <member name="M:CommonUtil.Controls.Line.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Line.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下 always return false
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Line.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起 always return false
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Line.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Line.Contains(System.Drawing.Point)">
            <summary>
            是否包含一个点
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Line.Move(System.Int32,System.Int32)">
            <summary>
            平移
            </summary>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
        </member>
        <member name="M:CommonUtil.Controls.Line.Translate(System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
        </member>
        <member name="T:CommonUtil.Controls.MouseMgr">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.MouseMgr.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.MouseMgr.MouseDownPoint">
            <summary>
            鼠标点下的点
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.MouseMgr.MouseUpPoint">
            <summary>
            鼠标释放的点
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.MouseState">
            <summary>
            鼠标状态
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.MouseState.MouseDown">
            <summary>
            按下
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.MouseState.MouseUp">
            <summary>
            弹起
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.NullCommonInnerCotrol">
            <summary>
            空的控件
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.PolygonRegion">
            <summary>
            多边形
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.PolygonRegion.#ctor(System.Drawing.Point[])">
            <summary>
            
            </summary>
            <param name="points"></param>
        </member>
        <member name="F:CommonUtil.Controls.PolygonRegion.m_OutLineRectangle">
            <summary>
            轮廓矩形
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.PolygonRegion.Points">
            <summary>
            所有的点
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.PolygonRegion.Contains(System.Drawing.Point)">
            <summary>
            TODO 准确化
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Controls.Progress">
            <summary>
            进度条, Size
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.ProgressPercentage">
            <summary>
            进度 百分比
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.MaxValue">
            <summary>
            最大的可能的值
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.CurrentValue">
            <summary>
            当前值
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.MaxDrawValue">
            <summary>
            最大画图的值
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.Direction">
            <summary>
             方向
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.IsOutlineVisible">
            <summary>
            边框是否可见
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.OutLineColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Progress.m_DrawRectangle">
            <summary>
            绘图区域
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.ContentBrush">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Progress.OutlinePen">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Progress.#ctor(CommonUtil.Model.Direction)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Progress.OnDraw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.Roundness.ColorChangedEventArgs">
            <summary>
             颜色变化的事件参数
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.ColorChangedEventArgs.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="oldColor"></param>
            <param name="newColor"></param>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.ColorChangedEventArgs.OldColor">
            <summary>
            老的
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.ColorChangedEventArgs.NewColor">
            <summary>
            新的
            </summary>
        </member>
        <member name="T:CommonUtil.Controls.Roundness.GDIRoundness">
            <summary>
            圆
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Roundness.GDIRoundness.m_ArcPen">
            <summary>
            m_ArcPen
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Roundness.GDIRoundness.m_ContentBrush">
            <summary>
            SolidBrush
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Roundness.GDIRoundness.NeedDrawArcChanged">
            <summary>
            NeedDrawArc 变化 
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Roundness.GDIRoundness.ArcColorChanged">
            <summary>
            ArcColor 变化
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Roundness.GDIRoundness.ContentColorChanged">
            <summary>
            ContentColor Changed
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.Roundness.GDIRoundness.NeedDrawContentChanged">
            <summary>
            NeedDrawContent 变化  
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.GDIRoundness.R">
            <summary>
            半径
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.GDIRoundness.Center">
            <summary>
            圆心
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.GDIRoundness.ArcColor">
            <summary>
            弧线的颜色, 默认白色
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.GDIRoundness.ContentColor">
            <summary>
            中间的颜色, 默认黑色
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.GDIRoundness.NeedDrawArc">
            <summary>
            是否需要绘制弧线
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.GDIRoundness.NeedDrawContent">
            <summary>
            是否需要绘制中间的
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.GDIRoundness.BehavierStratege">
            <summary>
            控件的形为
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundness.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundness.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundness.OnMouseUp(System.Drawing.Point)">
            <summary>
            鼠标按下后弹起
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundness.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundness.Contains(System.Drawing.Point)">
            <summary>
            是否包含一个点
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundness.Contains(System.Int32,System.Int32)">
            <summary>
            是否包含一个点
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundness.DrawArc(System.Drawing.Graphics)">
            <summary>
            绘圆弧
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundness.DrawContent(System.Drawing.Graphics)">
            <summary>
            填充中间
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.Roundness.GDIRoundnessNormalBehavier">
            <summary>
            普通行为
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundnessNormalBehavier.#ctor(CommonUtil.Controls.Roundness.GDIRoundness)">
            <summary>
            
            </summary>
            <param name="control"></param>
        </member>
        <member name="P:CommonUtil.Controls.Roundness.GDIRoundnessNormalBehavier.Control">
            <summary>
            Control
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundnessNormalBehavier.OnMouseDown(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundnessNormalBehavier.OnMouseUp(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Controls.Roundness.GDIRoundnessNormalBehavier.OnDraw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Controls.SelectableRectangleControl">
            <summary>
            可选择的矩形控件
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.SelectableRectangleControl.SelectedHandler">
            <summary>
            被选中时产生的事件
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.SelectableRectangleControl.IsSelected">
            <summary>
             是否被选中 默认不选中
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.SelectableRectangleControl.IsRectangleVisible">
            <summary>
            矩形轮廓是否可见 默认可见
            </summary>
        </member>
        <member name="P:CommonUtil.Controls.SelectableRectangleControl.SelectedPen">
            <summary>
            选中时的边框
            </summary>
        </member>
        <member name="F:CommonUtil.Controls.SelectableRectangleControl.DefaultSelectedPend">
            <summary>
            默认的选中边框色  黑色
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.SelectableRectangleControl.#ctor(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="outLineRectangle"></param>
        </member>
        <member name="M:CommonUtil.Controls.SelectableRectangleControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Controls.SelectableRectangleControl.OnMouseDown(System.Drawing.Point)">
            <summary>
            鼠标按下
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:CommonUtil.Controls.SelectableRectangleControl.OnDraw(System.Drawing.Graphics)">
            <summary>
            绘图
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonUtil.Model.Direction">
            <summary>
            方向定义
            </summary>
        </member>
        <member name="F:CommonUtil.Model.Direction.Up">
            <summary>
            上
            </summary>
        </member>
        <member name="F:CommonUtil.Model.Direction.Down">
            <summary>
            下
            </summary>
        </member>
        <member name="F:CommonUtil.Model.Direction.Left">
            <summary>
            左
            </summary>
        </member>
        <member name="F:CommonUtil.Model.Direction.Right">
            <summary>
            右
            </summary>
        </member>
        <member name="T:CommonUtil.Model.FloatBytesMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Model.FloatBytesMap.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Model.FloatBytesMap.Byte0">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Model.FloatBytesMap.Byte1">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Model.FloatBytesMap.Byte2">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Model.FloatBytesMap.Byte3">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.FloatBytesMap.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:CommonUtil.Model.IReadOnlyDictionary`2">
            <summary>
            只读字典接口
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:CommonUtil.Model.IReadOnlyDictionary`2.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IReadOnlyDictionary`2.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.IReadOnlyDictionary`2.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Model.IReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Model.IReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:CommonUtil.Model.IReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Model.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:CommonUtil.Model.IReadOnlyDictionary`2.Item(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:CommonUtil.Model.IReadOnlyDictionary`2.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IReadOnlyDictionary`2.Values">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonUtil.Model.IRectangle">
            <summary>
            IRectangle
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IRectangle.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IRectangle.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IRectangle.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IRectangle.Height">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonUtil.Model.IRectangleF">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IRectangleF.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IRectangleF.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IRectangleF.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.IRectangleF.Height">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonUtil.Model.OutLineChangedEventArgs`1">
            <summary>
            OutLineChangedEventArgs
            </summary>
        </member>
        <member name="M:CommonUtil.Model.OutLineChangedEventArgs`1.#ctor(CommonUtil.Model.OutLineChangedType,`0,`0)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="oldRectangle"></param>
            <param name="newRectangle"></param>
        </member>
        <member name="P:CommonUtil.Model.OutLineChangedEventArgs`1.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.OutLineChangedEventArgs`1.OldRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.OutLineChangedEventArgs`1.NewRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonUtil.Model.OutLineChangedType">
            <summary>
            OutLineChanged type
            </summary>
        </member>
        <member name="F:CommonUtil.Model.OutLineChangedType.Location">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Model.OutLineChangedType.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:CommonUtil.Model.OutLineChangedType.Outline">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonUtil.Model.ReadOnlyDictionary`2">
            <summary>
            ReadOnlyDictionary
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="F:CommonUtil.Model.ReadOnlyDictionary`2.m_ActureDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="P:CommonUtil.Model.ReadOnlyDictionary`2.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.ReadOnlyDictionary`2.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Model.ReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Model.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="P:CommonUtil.Model.ReadOnlyDictionary`2.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.ReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Model.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:CommonUtil.Model.ReadOnlyDictionary`2.Item(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:CommonUtil.Model.ReadOnlyDictionary`2.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.ReadOnlyDictionary`2.Values">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.ReadOnlyDictionary`2.Clone">
            <summary>
            创建作为当前实例副本的新对象。
            </summary>
            <returns>
            作为此实例副本的新对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:CommonUtil.Model.XmlPoint">
            <summary>
            可xml序列化的 Point 
            </summary>
        </member>
        <member name="E:CommonUtil.Model.XmlPoint.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlPoint.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlPoint.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlPoint.Point">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.XmlPoint.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.XmlPoint.RaisePropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:CommonUtil.Model.XmlRectangle">
            <summary>
            可xml序列化的 Rectangle
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangle.RectangleXmlString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangle.LocationXmlString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangle.SizeXmlString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangle.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangle.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangle.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangle.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangle.Rectangle">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.XmlRectangle.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="E:CommonUtil.Model.XmlRectangle.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.XmlRectangle.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:CommonUtil.Model.XmlRectangleF">
            <summary>
            可xml序列化的 RectangleF
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangleF.RectangleXmlString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangleF.LocationXmlString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangleF.SizeXmlString">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangleF.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangleF.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangleF.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangleF.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Model.XmlRectangleF.RectangleF">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Model.XmlRectangleF.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage
            </summary>
            <example><code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code></example>
        </member>
        <member name="T:CommonUtil.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>
            </summary>
            <example><code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code></example>
        </member>
        <member name="T:CommonUtil.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form
            </summary>
            <example><code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code></example>
        </member>
        <member name="M:CommonUtil.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:CommonUtil.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>
            </summary>
            <example><code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:CommonUtil.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface
             and this method is used to notify that some property value changed
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example><code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:CommonUtil.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br/>
            <c>canbenull</c> annotation is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null, and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:CommonUtil.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:CommonUtil.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example><code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code></example>
        </member>
        <member name="T:CommonUtil.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example><code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code></example>
        </member>
        <member name="T:CommonUtil.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly
            (e.g. via reflection, in external library), so this symbol
            will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper
            to not mark symbols marked with such attributes as unused
            (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:CommonUtil.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used</summary>
        </member>
        <member name="F:CommonUtil.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member</summary>
        </member>
        <member name="F:CommonUtil.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:CommonUtil.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type</summary>
        </member>
        <member name="T:CommonUtil.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly
            when marked with <see cref="T:CommonUtil.Annotations.MeansImplicitUseAttribute"/>
            or <see cref="T:CommonUtil.Annotations.UsedImplicitlyAttribute"/>
            </summary>
        </member>
        <member name="F:CommonUtil.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used</summary>
        </member>
        <member name="F:CommonUtil.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used</summary>
        </member>
        <member name="T:CommonUtil.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled
            when the invoked method is on stack. If the parameter is a delegate,
            indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated
            while the method is executed
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>
            </summary>
            <example><code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code></example>
        </member>
        <member name="T:CommonUtil.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder
            within a web project. Path can be relative or absolute,
            starting from web root (~)
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC controller. If applied to a method,
            the MVC controller name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, String)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, Object)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC partial view. If applied to a method,
            the MVC partial view name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling all inspections
            for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name
            </summary>
            <example><code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code></example>
        </member>
        <member name="T:CommonUtil.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>
            </summary>
        </member>
        <member name="T:CommonUtil.Util.ActionUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.ActionUtil.OnAction(System.Delegate,System.Object[])">
            <summary>
            
            </summary>
            <param name="act"></param>
            <param name="objs"></param>
        </member>
        <member name="T:CommonUtil.Util.AttributeUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.AttributeUtility.GetCustomAttribute``1(System.Reflection.MemberInfo)">
            <summary>
            
            </summary>
            <param name="memberInfo"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.BytesStructConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.BytesStructConverter.StructToBytes(System.Object,System.Int32)">
            <summary>
            将Byte转换为结构体类型
            </summary>
            <param name="structObj"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.BytesStructConverter.ByteToStruct(System.Byte[],System.Type)">
            <summary>
            将Byte转换为结构体类型
            </summary>
            <param name="bytes"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.BytesStructConverter.ByteToStruct``1(System.Byte[])">
            <summary>
            将Byte转换为结构体类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.ClassAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.ClassAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.ClassAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:CommonUtil.Util.ClassAttribute.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonUtil.Util.DataSerialization">
            <summary>
            数据序列化
            </summary>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.SerializeToXmlFile``1(``0,System.String)">
            <summary>
            xml 序列化到文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="file"></param>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.SerializeToString``1(``0,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="encoding"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.SerializeToString``1(``0,System.Text.Encoding,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="encoding"></param>
            <param name="rootName"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.SerializeToString``1(``0)">
            <summary>
             使用 Encoding.Default
            </summary>
            <param name="data"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.SerializeToStream``1(``0,System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="fs"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.SerializeToXmlFile``1(``0,System.String,System.String)">
            <summary>
            xml 序列化到文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rootName">根结点的名字</param>
            <param name="data"></param>
            <param name="file"></param>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.SerializeToStream``1(``0,System.String,System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="rootName"></param>
            <param name="fs"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.DeserializeFromXmlFile``1(System.String)">
            <summary>
            将xml文件反序列化到对象 
            </summary>
            <param name="file"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.DeserializeFromString``1(System.String,System.Text.Encoding)">
            <summary>
            将xml文件反序列化到对象 
            </summary>
            <param name="content"></param>
            <param name="encoding"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.DeserializeFromString``1(System.String,System.Text.Encoding,System.String)">
            <summary>
            将xml文件反序列化到对象 
            </summary>
            <param name="content"></param>
            <param name="encoding"></param>
            <param name="rootName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.DeserializeFromString``1(System.String)">
            <summary>
            将xml文件反序列化到对象 
            </summary>
            <param name="content"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.DeserializeFromStream``1(System.IO.Stream)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.DeserializeFromStream``1(System.IO.Stream,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fs"></param>
            <param name="rootName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.DataSerialization.DeserializeFromXmlFile``1(System.String,System.String)">
            <summary>
            将xml文件反序列化到对象 
            </summary>
            <param name="file"></param>
            <param name="rootName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.DeepCopy">
            <summary>
            深拷贝 
            </summary>
        </member>
        <member name="M:CommonUtil.Util.DeepCopy.Copy``1(``0)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.DeepCopy.Binder">
            <summary>
            解决 反序列化报的无法找到程序集的BUG
            </summary>
        </member>
        <member name="T:CommonUtil.Util.DynamicInvokeHelper">
            <summary>
            FuncDictionary
            </summary>
        </member>
        <member name="P:CommonUtil.Util.DynamicInvokeHelper.Dictionary">
            <summary>
            Dictionary
            </summary>
        </member>
        <member name="M:CommonUtil.Util.DynamicInvokeHelper.DynamicInvoke(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.DynamicInvokeHelper.DynamicInvoke``1(System.String)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.DynamicInvokeHelper.CreateDictionary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.EnumUtil">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:CommonUtil.Util.EnumUtil.m_AllEnumsDictionary" -->
        <member name="M:CommonUtil.Util.EnumUtil.GetAllEnums``1">
            <summary>
            获取枚举类型的所有值。
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.EnumUtil.GetDescription(System.Enum)">
            <summary>
            获得 Description   的特性信息
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.EnumUtil.GetAttibutes``1(System.Enum)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.EnumUtil.FindEnumByDescriptio``1(System.String)">
            <summary>
            
            </summary>
            <param name="description"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:CommonUtil.Util.EventArgs`1">
            <summary>
            EventArgs
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CommonUtil.Util.EventArgs`1.#ctor(`0)">
            <summary>
            
            </summary>
            <param name="arg"></param>
        </member>
        <member name="P:CommonUtil.Util.EventArgs`1.Arg">
            <summary>
            参数信息
            </summary>
        </member>
        <member name="T:CommonUtil.Util.Extension.DictionaryExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Extension.DictionaryExtension.AsReadOnlyDictionary``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            转换成 只读 dictionary
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.DictionaryExtension.AsConcurrentDictionary``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            转换成 线程同步的
            </summary>
            <param name="sourceDic"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.Extension.FloatExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Extension.FloatExtension.IsDifferentTo(System.Single,System.Single)">
            <summary>
            使用字节对比方式对比float 
            </summary>
            <param name="src"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.Extension.GraphicsPathExtension">
            <summary>
            GraphicsPathExtension
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Extension.GraphicsPathExtension.Translate(System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Single)">
            <summary>
            /// 平移
            </summary>
            <param name="path"></param>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.GraphicsPathExtension.Translate(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Point)">
            <summary>
            平移
            </summary>
            <param name="path"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.GraphicsPathExtension.Translate(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.PointF)">
            <summary>
            平移
            </summary>
            <param name="path"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.Extension.ExOfIRectangleAndIRectangleF">
            <summary>
            IRectangle 的扩展方法
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Extension.ExOfIRectangleAndIRectangleF.GetRectangle(CommonUtil.Model.IRectangle)">
            <summary>
            
            </summary>
            <param name="iRectangle"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.ExOfIRectangleAndIRectangleF.SetRectangle(CommonUtil.Model.IRectangle,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="iRectangle"></param>
            <param name="rectangle"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.ExOfIRectangleAndIRectangleF.GetRectangleF(CommonUtil.Model.IRectangleF)">
            <summary>
            
            </summary>
            <param name="iRectangle"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.ExOfIRectangleAndIRectangleF.SetRectangleF(CommonUtil.Model.IRectangleF,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="iRectangleF"></param>
            <param name="rectangleF"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.Extension.MatrixExtension">
            <summary>
            MatrixEx
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Extension.MatrixExtension.TransformPoint(System.Drawing.Drawing2D.Matrix,System.Drawing.Point)">
            <summary>
            转换单个坐标
            </summary>
            <param name="matrix"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.MatrixExtension.TransformPoint(System.Drawing.Drawing2D.Matrix,System.Single,System.Single)">
            <summary>
            转换单个坐标
            </summary>
            <param name="matrix"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.MatrixExtension.TransformPoint(System.Drawing.Drawing2D.Matrix,System.Int32,System.Int32)">
            <summary>
            转换单个坐标
            </summary>
            <param name="matrix"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.MatrixExtension.TransformPoint(System.Drawing.Drawing2D.Matrix,System.Drawing.PointF)">
            <summary>
            转换单个坐标
            </summary>
            <param name="matrix"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.Extension.PointExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Extension.PointExtension.ToString(System.Drawing.Point,System.String)">
            <summary>
            Point 定制 Tostring的方法
            </summary>
            <param name="point"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.PointExtension.ToString(System.Drawing.PointF,System.String)">
            <summary>
            PointF 定制 Tostring的方法
            </summary>
            <param name="point"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.PointExtension.Translate(System.Drawing.Point,System.Int32,System.Int32)">
            <summary>
            平移
            </summary>
            <param name="point"></param>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.PointExtension.Translate(System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            平移
            </summary>
            <param name="point"></param>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.PointExtension.Translate(System.Drawing.PointF,System.Int32,System.Int32)">
            <summary>
            平移
            </summary>
            <param name="point"></param>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.Extension.RectangleExtension">
            <summary>
            矩形 的扩展方法
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Extension.RectangleExtension.GetMidPoint(System.Drawing.Rectangle,CommonUtil.Model.Direction)">
            <summary>
            获得指定方向的矩形中点
            </summary>
            <param name="rect"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.RectangleExtension.GetPoint(System.Drawing.Rectangle,CommonUtil.Model.Direction,System.Single)">
            <summary>
            获得指定方向的矩形的指定比例的点
            </summary>
            <param name="rect"></param>
            <param name="direction"></param>
            <param name="rate"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.RectangleExtension.GetCenterPoint(System.Drawing.Rectangle)">
            <summary>
            获得中心点
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.RectangleExtension.GetCenterPoint(System.Drawing.RectangleF)">
            <summary>
            获得中心点
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.RectangleExtension.GetMidPoint(System.Drawing.RectangleF,CommonUtil.Model.Direction)">
            <summary>
            获得指定方向的矩形中点
            </summary>
            <param name="rect"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Extension.RectangleExtension.GetPoint(System.Drawing.RectangleF,CommonUtil.Model.Direction,System.Single)">
            <summary>
            获得指定方向的矩形的指定比例的点
            </summary>
            <param name="rect"></param>
            <param name="direction"></param>
            <param name="rate"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.HandleUtil">
            <summary>
            HandleUtil
            </summary>
        </member>
        <member name="M:CommonUtil.Util.HandleUtil.OnHandle(System.EventHandler,System.Object,System.EventArgs)">
            <summary>
            事件触发
            </summary>
            <param name="handler"></param>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CommonUtil.Util.HandleUtil.OnHandle(System.EventHandler)">
            <summary>
            事件触发
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:CommonUtil.Util.HandleUtil.OnHandle``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            事件触发
            </summary>
            <param name="handler"></param>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CommonUtil.Util.HandleUtil.OnHandle``1(System.EventHandler{``0})">
            <summary>
            事件触发
            </summary>
            <param name="handler"></param>
        </member>
        <member name="T:CommonUtil.Util.LineHelper">
            <summary>
            线的帮助类
            </summary>
        </member>
        <member name="M:CommonUtil.Util.LineHelper.GetMidPoint(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            获得两个点的中点
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.LineHelper.GetMidPoint(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            获得两个点的中点
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.AppLog">
            <summary>
            日志管理
            </summary>
        </member>
        <member name="P:CommonUtil.Util.AppLog.CurrentLogger">
            <summary>
            当前的 logger
            </summary>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Fatal(System.String)">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Fatal(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Error(System.String)">
            <summary>
            Error
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Error(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Warn(System.String)">
            <summary>
            Warn
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Warn(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Info(System.String)">
            <summary>
            Info
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Info(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Debug(System.String)">
            <summary>
            Debug
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonUtil.Util.AppLog.Debug(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="T:CommonUtil.Util.LogMgr">
            <summary>
            日志管理
            </summary>
        </member>
        <member name="P:CommonUtil.Util.LogMgr.SysLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Util.LogMgr.AppLog">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.GetLogger(System.String)">
            <summary>
            
            </summary>
            <param name="loggerName"></param>
            <returns></returns>
        </member>
        <member name="P:CommonUtil.Util.LogMgr.CurrentLogger">
            <summary>
            当前的 logger
            </summary>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Fatal(System.String)">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Fatal(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Error(System.String)">
            <summary>
            Error
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Error(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Warn(System.String)">
            <summary>
            Warn
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Warn(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Info(System.String)">
            <summary>
            Info
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Info(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Debug(System.String)">
            <summary>
            Debug
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonUtil.Util.LogMgr.Debug(System.String,System.Object[])">
            <summary>
            Fatal
            </summary>
            <param name="msgFormat"></param>
            <param name="args"></param>
        </member>
        <member name="T:CommonUtil.Util.MatrixHelper">
            <summary>
            MatrixHelper
            </summary>
        </member>
        <member name="M:CommonUtil.Util.MatrixHelper.CreateTurnMatrix(System.Single,CommonUtil.Util.TurnOrientation)">
            <summary>
            创建一个翻转矩阵
            </summary>
            <param name="mid"></param>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.TurnOrientation">
            <summary>
            翻转方向
            </summary>
        </member>
        <member name="F:CommonUtil.Util.TurnOrientation.Horizontal">
            <summary>
            水平
            </summary>
        </member>
        <member name="F:CommonUtil.Util.TurnOrientation.Vertical">
            <summary>
            垂直
            </summary>
        </member>
        <member name="T:CommonUtil.Util.Parser.DataMemberAttribute">
            <summary>
             可以只设定 IsRequire Order,
            同一个类中, Order 必须唯一
            </summary>
        </member>
        <member name="P:CommonUtil.Util.Parser.DataMemberAttribute.IsRequire">
            <summary>
            是否需要解析
            </summary>
        </member>
        <member name="P:CommonUtil.Util.Parser.DataMemberAttribute.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Util.Parser.DataMemberAttribute.Order">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:CommonUtil.Util.Parser.DataMemberAttribute.PropertyName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:CommonUtil.Util.Parser.DataMemberAttribute.PropertyType">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="P:CommonUtil.Util.Parser.DataMemberAttribute.PropertyInfo">
            <summary>
            字段信息
            </summary>
        </member>
        <member name="T:CommonUtil.Util.Parser.DataMemberAttributeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Parser.DataMemberAttributeCollection.#ctor(System.Type,System.String[])">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="propertyNames"></param>
        </member>
        <member name="P:CommonUtil.Util.Parser.DataMemberAttributeCollection.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Parser.DataMemberAttributeCollection.GetConfiguration(System.Type,System.String[])">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="propertyNames"></param>
        </member>
        <member name="P:CommonUtil.Util.Parser.DataMemberAttributeCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="idx"></param>
        </member>
        <member name="P:CommonUtil.Util.Parser.DataMemberAttributeCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:CommonUtil.Util.Parser.ListDataPaser">
            <summary>
             解析 IEnumerable IEnumerable string 成 List T 
            </summary>
        </member>
        <member name="M:CommonUtil.Util.Parser.ListDataPaser.Parse``1(System.Collections.Generic.List{System.Collections.Generic.List{System.String}},System.String[])">
            <summary>
            
            </summary>
            <param name="entityRows"></param>
            <param name="propertyNames"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.Parser.ListDataPaser.Parse``1(System.Collections.Generic.List{System.String},System.String[])">
            <summary>
            
            </summary>
            <param name="entityRows"></param>
            <param name="propertyNames"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.PropertyAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.PropertyAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.PropertyAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:CommonUtil.Util.PropertyAttribute.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonUtil.Util.PropertySupport">
            <summary>
             Provides support for extracting property information based on a property expression.
            </summary>
        </member>
        <member name="M:CommonUtil.Util.PropertySupport.ExtractPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Extracts the property name from a property expression.
            </summary>
            <typeparam name="T">The object type containing the property specified in the expression.</typeparam>
            <param name="propertyExpression">The property expression (e.g. p => p.PropertyName)</param>
            <returns>The name of the property.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="propertyExpression"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the expression is:<br/>
                Not a <see cref="T:System.Linq.Expressions.MemberExpression"/><br/>
                The <see cref="T:System.Linq.Expressions.MemberExpression"/> does not represent a property.<br/>
                Or, the property is static.
            </exception>
        </member>
        <member name="M:CommonUtil.Util.PropertySupport.ExtractPropertyName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Extracts the property name from a property expression.
            </summary>
            <typeparam name="T">The object type containing the property specified in the expression.</typeparam>
            <typeparam name="TSource"></typeparam>
            <param name="propertyExpression">The property expression (e.g. p => p.PropertyName)</param>
            <returns>The name of the property.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="propertyExpression"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the expression is:<br/>
                Not a <see cref="T:System.Linq.Expressions.MemberExpression"/><br/>
                The <see cref="T:System.Linq.Expressions.MemberExpression"/> does not represent a property.<br/>
                Or, the property is static.
            </exception>
        </member>
        <member name="T:CommonUtil.Util.StringExtension">
            <summary>
            StringExtension
            </summary>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.IsNullOrWhiteSpace(System.String)">
            <summary>
             == null || == Empty || == WhiteSpace
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsDecimal(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsDateTime(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsFloat(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsDouble(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsInt(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsByte(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsSbyte(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsShort(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsUshort(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsUint(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsLong(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsUlong(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsChar(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsBool(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsColor(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsPoint(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsPointF(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsSize(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsSizeF(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsRectangle(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.StringExtension.AsRectangleF(System.String)">
            <summary>
            
            </summary>
            <param name="inputValue"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.XmlAttributeUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Append``1(System.String,System.String,System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <param name="inputUri"></param>
            <param name="parentXPath"></param>
            <param name="entities"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Replace``1(System.String,System.String,System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <param name="inputUri"></param>
            <param name="parentXPath"></param>
            <param name="entities"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.RepalceOrAppend``1(System.String,System.String,System.Collections.Generic.List{``0},System.Boolean)">
            <summary>
            
            </summary>
            <param name="inputUri"></param>
            <param name="parentXPath"></param>
            <param name="entities"></param>
            <param name="appendToLast"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.ConvertToString``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <param name="entities"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Convert``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <param name="entities"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.ConvertToString``1(``0)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Convert``1(``0)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.ParseByDescendants``1(System.String)">
            <summary>
            
            </summary>
            <param name="inputUri"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.ParseByDescendants``1(System.Xml.Linq.XDocument)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.ParseByDescendants``1(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
            <summary>
            
            </summary>
            <param name="elements"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.AddEntity``1(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
            <summary>
            
            </summary>
            <param name="attributes"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Parse``1(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="inputUri"></param>
            <param name="parentXPath"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Parse``1(System.Xml.XmlDocument,System.String)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="parentXPath"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Parse``1(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="parentNode"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Parse``1(System.Xml.XmlNodeList)">
            <summary>
            
            </summary>
            <param name="nodeList"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Parse``1(System.String)">
            <summary>
            
            </summary>
            <param name="inputUri"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.Parse``1(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.GetClassName``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlAttributeUtility.GetPropertyName(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtil.Util.XmlContentList`1">
            <summary>
            可xml序列化的list, 序列化为 item1,item2, 写入 content
            </summary>
        </member>
        <member name="P:CommonUtil.Util.XmlContentList`1.Convertor">
            <summary>
             string -> T 的转换器
            </summary>
        </member>
        <member name="M:CommonUtil.Util.XmlContentList`1.ReadNextHasValueElememt(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlContentList`1.ReadNextElememt(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Util.XmlContentList`1.ReadXml(System.Xml.XmlReader)">
            <summary>
            从对象的 XML 表示形式生成该对象。
            </summary>
            <param name="reader">对象从中进行反序列化的 <see cref="T:System.Xml.XmlReader"/> 流。</param>
        </member>
        <member name="M:CommonUtil.Util.XmlContentList`1.WriteXml(System.Xml.XmlWriter)">
            <summary>
            将对象转换为其 XML 表示形式。
            </summary>
            <param name="writer">对象要序列化为的 <see cref="T:System.Xml.XmlWriter"/> 流。</param>
        </member>
        <member name="M:CommonUtil.Util.XmlContentList`1.GetSchema">
            <summary>
            此方法是保留方法，请不要使用。在实现 IXmlSerializable 接口时，应从此方法返回 null（在 Visual Basic 中为 Nothing），如果需要指定自定义架构，应向该类应用 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/>。
            </summary>
            <returns>
            <see cref="T:System.Xml.Schema.XmlSchema"/>，描述由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> 方法产生并由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> 方法使用的对象的 XML 表示形式。
            </returns>
        </member>
        <member name="T:CommonUtil.Util.XmlSerializationListModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonUtil.Util.XmlSerializationListModel.Datas">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMICommon.Controls.Grid.GridRoundnessItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMICommon.Controls.Grid.GridRoundnessItem.Roundness">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMICommon.Controls.Grid.GridRoundnessItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMICommon.Controls.Grid.GridRoundnessItem.ContentSize">
            <summary>
            内部元素的大小 
            </summary>
        </member>
    </members>
</doc>

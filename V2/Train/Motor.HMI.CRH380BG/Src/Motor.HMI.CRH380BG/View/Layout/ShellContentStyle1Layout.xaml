<UserControl x:Class="Motor.HMI.CRH380BG.View.Layout.ShellContentStyle1Layout"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:constant="clr-namespace:Motor.HMI.CRH380BG.Constant"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interactivity="clr-namespace:MMI.Facility.WPFInfrastructure.Interactivity;assembly=MMI.Facility.WPFInfrastructure"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:regions="http://www.codeplex.com/CompositeWPF"
             xmlns:viewModel="clr-namespace:Motor.HMI.CRH380BG.ViewModel"
             d:DataContext="{d:DesignInstance viewModel:CRH380BGViewModel}"
             d:DesignHeight="600"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <!--<i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <interactivity:InvokeCommandAction Command="{Binding Path=StateViewModel.Controller.LoadedCommand}" CommandParameter="{Binding Path=StateViewModel.Model.ViewLocation}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>-->
    <Grid>
        <Grid Background="{StaticResource Motor.HMI.CRH380BG.ContentBackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="40*" />
                <RowDefinition Height="460*" />
                <RowDefinition Height="35*" />
                <RowDefinition Height="65*" />
            </Grid.RowDefinitions>
            <Border regions:RegionManager.RegionName="{x:Static constant:RegionNames.ContentTitle}" />
            <Border Grid.Row="1" regions:RegionManager.RegionName="{x:Static constant:RegionNames.ContentContent}" />
            <Border Grid.Row="2" regions:RegionManager.RegionName="{x:Static constant:RegionNames.TainStateIcon}" />
            <Border Grid.Row="3" regions:RegionManager.RegionName="{x:Static constant:RegionNames.ContentBooter}" />
        </Grid>
        <Border Panel.ZIndex="1"
                Background="{Binding Path=Other.Model.Light,
                                     Converter={StaticResource Motor.HMI.CRH380BG.LightBushConverter}}"
                IsHitTestVisible="False" />
        <Image Source="{StaticResource Motor.HMI.CRH380BG.ImgWelcom}" Visibility="{Binding Path=Domain.Model.MainData.WelcomVisible, Converter={StaticResource Motor.HMI.CRH380BG.BooleanToVisibilityConverter}}" />
        <TextBlock Margin="0,0,110,0"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Top"
                   Style="{StaticResource Motor.HMI.CRH380BG.BrakeFunctionStatusViewTextStyle}"
                   Text="{Binding Path=Other.Model.ShowTime,
                                  StringFormat={StaticResource Motor.HMI.CRH380BG.DateFormart1},
                                  Mode=OneWay}"
                   Visibility="{Binding Path=Domain.Model.MainData.WelcomVisible,
                                        Converter={StaticResource Motor.HMI.CRH380BG.BooleanToVisibilityConverter}}" />
        <TextBlock Margin="0,0,30,0"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Top"
                   Style="{StaticResource Motor.HMI.CRH380BG.BrakeFunctionStatusViewTextStyle}"
                   Text="{Binding Path=Other.Model.ShowTime,
                                  StringFormat={StaticResource Motor.HMI.CRH380BG.TimeFormart},
                                  Mode=OneWay}"
                   Visibility="{Binding Path=Domain.Model.MainData.WelcomVisible,
                                        Converter={StaticResource Motor.HMI.CRH380BG.BooleanToVisibilityConverter}}" />
        <Border Height="40"
                Margin="80,30"
                VerticalAlignment="Bottom"
                Style="{StaticResource Motor.HMI.CRH380BG.WhiteBorderStyle}"
                Visibility="{Binding Path=Domain.Model.MainData.ConfirmConfigVisible,
                                     Converter={StaticResource Motor.HMI.CRH380BG.BooleanToVisibilityConverter}}">
            <Border Margin="5"
                    BorderBrush="{StaticResource Motor.HMI.CRH380BG.ContentBackgroundBrush}"
                    BorderThickness="1">
                <TextBlock Style="{StaticResource Motor.HMI.CRH380BG.TrainConfigTextSyle}" Text="确定配置中…" />
            </Border>
        </Border>
        <Border Height="40"
                Margin="80,30"
                VerticalAlignment="Bottom"
                Style="{StaticResource Motor.HMI.CRH380BG.WhiteBorderStyle}"
                Visibility="{Binding Path=StateViewModel.Model.CompiledVisible3,
                                     Converter={StaticResource Motor.HMI.CRH380BG.BooleanToVisibilityConverter}}">
            <Border BorderBrush="{StaticResource Motor.HMI.CRH380BG.ContentBackgroundBrush}" BorderThickness="1">
                <TextBlock Style="{StaticResource Motor.HMI.CRH380BG.TitleBlackTextStyle}" Text="正在配置中，请等待60S 根据ATP提示的线路信息惰行或减速" />
            </Border>
        </Border>
    </Grid>
</UserControl>

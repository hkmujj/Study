<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Root" xml:space="preserve">
    <value>Root</value>
  </data>
  <data name="Root_时间设置" xml:space="preserve">
    <value>Root-时间设置</value>
  </data>
  <data name="Root_机车设置" xml:space="preserve">
    <value>Root-机车设置</value>
  </data>
  <data name="Root_机车设置_TAX2信息" xml:space="preserve">
    <value>Root-机车设置-TAX2信息</value>
  </data>
  <data name="Root_机车设置_TAX2信息_轨道检测" xml:space="preserve">
    <value>Root-机车设置-TAX2信息-轨道检测</value>
  </data>
  <data name="Root_机车设置_TAX2信息_弓网检测" xml:space="preserve">
    <value>Root-机车设置-TAX2信息-弓网检测</value>
  </data>
  <data name="Root_机车设置_TAX2信息_TMIS检测" xml:space="preserve">
    <value>Root-机车设置-TAX2信息-TMIS检测</value>
  </data>
  <data name="Root_机车设置_TAX2信息_DMIS检测" xml:space="preserve">
    <value>Root-机车设置-TAX2信息-DMIS检测</value>
  </data>
  <data name="Root_机车设置_TAX2信息_列车通讯" xml:space="preserve">
    <value>Root-机车设置-TAX2信息-列车通讯</value>
  </data>
  <data name="Root_机车设置_TAX2信息_语音录音" xml:space="preserve">
    <value>Root-机车设置-TAX2信息-语音录音</value>
  </data>
  <data name="Root_机车设置_TAX2信息_走行监测" xml:space="preserve">
    <value>Root-机车设置-TAX2信息-走行监测</value>
  </data>
  <data name="Root_机车设置_TAX2信息_鸣笛检查" xml:space="preserve">
    <value>Root-机车设置-TAX2信息-鸣笛检查</value>
  </data>
  <data name="Root_机车设置_机车状态二" xml:space="preserve">
    <value>Root-机车设置-机车状态二</value>
  </data>
  <data name="Root_二级显示" xml:space="preserve">
    <value>Root-二级显示</value>
  </data>
  <data name="Root_二级显示_自检" xml:space="preserve">
    <value>Root-二级显示-自检</value>
  </data>
  <data name="Root_二级显示_监控" xml:space="preserve">
    <value>Root-二级显示-监控</value>
  </data>
  <data name="Root_二级显示_参数设置" xml:space="preserve">
    <value>Root-二级显示-参数设置</value>
  </data>
  <data name="Root_二级显示_参数设置_置监控信号" xml:space="preserve">
    <value>Root-二级显示-参数设置-置监控信号</value>
  </data>
  <data name="Root_二级显示_参数设置_置累计参数" xml:space="preserve">
    <value>Root-二级显示-参数设置-置累计参数</value>
  </data>
  <data name="Root_二级显示_参数设置_设置轮径" xml:space="preserve">
    <value>Root-二级显示-参数设置-设置轮径</value>
  </data>
  <data name="Root_二级显示输入密码" xml:space="preserve">
    <value>Root-二级显示输入密码</value>
  </data>
  <data name="Root_二级显示_故障检索" xml:space="preserve">
    <value>Root-二级显示-故障检索</value>
  </data>
  <data name="Root_二级显示_参数设置_置累计参数确认取消修改" xml:space="preserve">
    <value>Root-二级显示-参数设置-置累计参数确认取消修改</value>
  </data>
</root>
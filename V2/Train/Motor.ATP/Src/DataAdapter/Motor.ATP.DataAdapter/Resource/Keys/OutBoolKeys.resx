<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="启动确认" xml:space="preserve">
    <value>启动确认</value>
  </data>
  <data name="执行制动测试" xml:space="preserve">
    <value>执行制动测试</value>
  </data>
  <data name="确认CTCS2" xml:space="preserve">
    <value>确认CTCS-2</value>
  </data>
  <data name="确认CTCS3" xml:space="preserve">
    <value>确认CTCS-3</value>
  </data>
  <data name="载频上行" xml:space="preserve">
    <value>载频上行</value>
  </data>
  <data name="载频下行" xml:space="preserve">
    <value>载频下行</value>
  </data>
  <data name="允许缓解" xml:space="preserve">
    <value>允许缓解</value>
  </data>
  <data name="调车模式" xml:space="preserve">
    <value>调车模式</value>
  </data>
  <data name="目视模式" xml:space="preserve">
    <value>目视模式</value>
  </data>
  <data name="机信模式" xml:space="preserve">
    <value>机信模式</value>
  </data>
  <data name="退出调车模式" xml:space="preserve">
    <value>退出调车模式</value>
  </data>
  <data name="退出目视模式" xml:space="preserve">
    <value>退出目视模式</value>
  </data>
  <data name="退出机信模式" xml:space="preserve">
    <value>退出机信模式</value>
  </data>
  <data name="启动确认_没有消息提示与确认" xml:space="preserve">
    <value>启动确认(没有消息提示与确认)</value>
  </data>
  <data name="警惕确认" xml:space="preserve">
    <value>警惕确认</value>
  </data>
  <data name="电话号码发送确认" xml:space="preserve">
    <value>电话号码发送确认</value>
  </data>
  <data name="重新进行制动测试" xml:space="preserve">
    <value>重新进行制动测试？</value>
  </data>
  <data name="冒进确认" xml:space="preserve">
    <value>冒进确认</value>
  </data>
  <data name="确认越行" xml:space="preserve">
    <value>确认越行</value>
  </data>
  <data name="确认常用制动故障" xml:space="preserve">
    <value>确认常用制动故障</value>
  </data>
  <data name="进入CTCS3级" xml:space="preserve">
    <value>进入CTCS-3级</value>
  </data>
  <data name="进入CTCS2级" xml:space="preserve">
    <value>进入CTCS-2级</value>
  </data>
  <data name="引导确认" xml:space="preserve">
    <value>引导确认</value>
  </data>
  <data name="人工RBC连接请求" xml:space="preserve">
    <value>人工RBC连接请求</value>
  </data>
  <data name="警惕按钮" xml:space="preserve">
    <value>警惕按钮</value>
  </data>
  <data name="确认溜逸防护制动" xml:space="preserve">
    <value>确认溜逸防护制动</value>
  </data>
  <data name="确认紧急制动缓解" xml:space="preserve">
    <value>确认紧急制动缓解</value>
  </data>
  <data name="确认常用制动缓解" xml:space="preserve">
    <value>确认常用制动缓解</value>
  </data>
  <data name="屏幕启动过程" xml:space="preserve">
    <value>屏幕启动过程</value>
  </data>
  <data name="应答器丢失确认" xml:space="preserve">
    <value>应答器丢失确认</value>
  </data>
  <data name="确认退行防护制动" xml:space="preserve">
    <value>确认退行防护制动</value>
  </data>
  <data name="确认选择越行" xml:space="preserve">
    <value>确认选择越行</value>
  </data>
  <data name="确认进入目视模式" xml:space="preserve">
    <value>确认进入目视模式</value>
  </data>
  <data name="启动_确认列车数据" xml:space="preserve">
    <value>启动_确认列车数据</value>
  </data>
  <data name="启动_确认载频" xml:space="preserve">
    <value>启动_确认载频</value>
  </data>
  <data name="取消确认越行" xml:space="preserve">
    <value>取消确认越行</value>
  </data>
  <data name="取消确认选择越行" xml:space="preserve">
    <value>取消确认选择越行</value>
  </data>
  <data name="确认输入列车长度" xml:space="preserve">
    <value>确认输入列车长度</value>
  </data>
  <data name="确认输入车次号" xml:space="preserve">
    <value>确认输入车次号</value>
  </data>
  <data name="确认RBC呼叫失败" xml:space="preserve">
    <value>确认RBC呼叫失败</value>
  </data>
  <data name="确认制动测试失败" xml:space="preserve">
    <value>确认制动测试失败</value>
  </data>
  <data name="确认请缓解列车制动" xml:space="preserve">
    <value>确认请缓解列车制动</value>
  </data>
  <data name="确认引导警惕确认" xml:space="preserve">
    <value>确认引导警惕确认</value>
  </data>
  <data name="确认目视警惕确认" xml:space="preserve">
    <value>确认目视警惕确认</value>
  </data>
  <data name="确认CTCS0" xml:space="preserve">
    <value>确认CTCS-0</value>
  </data>
  <data name="执行最大常用制动测试" xml:space="preserve">
    <value>执行最大常用制动测试</value>
  </data>
  <data name="执行紧急制动测试" xml:space="preserve">
    <value>执行紧急制动测试</value>
  </data>
  <data name="确认进入C0等级" xml:space="preserve">
    <value>确认进入C0等级</value>
  </data>
  <data name="快捷键" xml:space="preserve">
    <value>快捷键</value>
  </data>
  <data name="切换到辅屏" xml:space="preserve">
    <value>切换到辅屏</value>
  </data>
</root>
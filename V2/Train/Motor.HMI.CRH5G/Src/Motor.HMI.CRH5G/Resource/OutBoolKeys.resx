<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="OutB信号开放标志" xml:space="preserve">
    <value>信号开放标志</value>
  </data>
  <data name="OutB切除受电弓3" xml:space="preserve">
    <value>切除受电弓3</value>
  </data>
  <data name="OutB切除受电弓6" xml:space="preserve">
    <value>切除受电弓6</value>
  </data>
  <data name="OutB切除受电弓11" xml:space="preserve">
    <value>切除受电弓11</value>
  </data>
  <data name="OutB切除受电弓14" xml:space="preserve">
    <value>切除受电弓14</value>
  </data>
  <data name="OutB切除牵引变压器3" xml:space="preserve">
    <value>切除牵引变压器3</value>
  </data>
  <data name="OutB切除牵引变压器6" xml:space="preserve">
    <value>切除牵引变压器6</value>
  </data>
  <data name="OutB切除牵引变压器11" xml:space="preserve">
    <value>切除牵引变压器11</value>
  </data>
  <data name="OutB切除牵引变压器14" xml:space="preserve">
    <value>切除牵引变压器14</value>
  </data>
  <data name="OutB切除牵引变流器1" xml:space="preserve">
    <value>切除牵引变流器1</value>
  </data>
  <data name="OutB切除牵引变流器2" xml:space="preserve">
    <value>切除牵引变流器2</value>
  </data>
  <data name="OutB切除牵引变流器5" xml:space="preserve">
    <value>切除牵引变流器5</value>
  </data>
  <data name="OutB切除牵引变流器7" xml:space="preserve">
    <value>切除牵引变流器7</value>
  </data>
  <data name="OutB切除牵引变流器8" xml:space="preserve">
    <value>切除牵引变流器8</value>
  </data>
  <data name="OutB切除牵引变流器9" xml:space="preserve">
    <value>切除牵引变流器9</value>
  </data>
  <data name="OutB切除牵引变流器10" xml:space="preserve">
    <value>切除牵引变流器10</value>
  </data>
  <data name="OutB切除牵引变流器13" xml:space="preserve">
    <value>切除牵引变流器13</value>
  </data>
  <data name="OutB切除牵引变流器15" xml:space="preserve">
    <value>切除牵引变流器15</value>
  </data>
  <data name="OutB切除牵引变流器16" xml:space="preserve">
    <value>切除牵引变流器16</value>
  </data>
  <data name="OutB切除辅助变流器1" xml:space="preserve">
    <value>切除辅助变流器1</value>
  </data>
  <data name="OutB切除辅助变流器2" xml:space="preserve">
    <value>切除辅助变流器2</value>
  </data>
  <data name="OutB切除辅助变流器5" xml:space="preserve">
    <value>切除辅助变流器5</value>
  </data>
  <data name="OutB切除辅助变流器7" xml:space="preserve">
    <value>切除辅助变流器7</value>
  </data>
  <data name="OutB切除辅助变流器8" xml:space="preserve">
    <value>切除辅助变流器8</value>
  </data>
  <data name="OutB切除辅助变流器9" xml:space="preserve">
    <value>切除辅助变流器9</value>
  </data>
  <data name="OutB切除辅助变流器10" xml:space="preserve">
    <value>切除辅助变流器10</value>
  </data>
  <data name="OutB切除辅助变流器13" xml:space="preserve">
    <value>切除辅助变流器13</value>
  </data>
  <data name="OutB切除辅助变流器15" xml:space="preserve">
    <value>切除辅助变流器15</value>
  </data>
  <data name="OutB切除辅助变流器16" xml:space="preserve">
    <value>切除辅助变流器16</value>
  </data>
  <data name="OutB切除主压缩机3" xml:space="preserve">
    <value>切除主压缩机3</value>
  </data>
  <data name="OutB切除主压缩机6" xml:space="preserve">
    <value>切除主压缩机6</value>
  </data>
  <data name="OutB切除主压缩机11" xml:space="preserve">
    <value>切除主压缩机11</value>
  </data>
  <data name="OutB切除主压缩机14" xml:space="preserve">
    <value>切除主压缩机14</value>
  </data>
  <data name="OutB屏处于高压系统显示页面TD屏1页面" xml:space="preserve">
    <value>屏处于高压系统显示页面（TD屏1页面）</value>
  </data>
  <data name="OutBTD屏处于第2页面" xml:space="preserve">
    <value>TD屏处于第2页面</value>
  </data>
  <data name="OutBTD屏处于第3页面" xml:space="preserve">
    <value>TD屏处于第3页面</value>
  </data>
  <data name="OutBTD屏处于第4页面" xml:space="preserve">
    <value>TD屏处于第4页面</value>
  </data>
  <data name="OutBTD屏处于第5页面" xml:space="preserve">
    <value>TD屏处于第5页面</value>
  </data>
  <data name="OutBTD屏处于第6页面" xml:space="preserve">
    <value>TD屏处于第6页面</value>
  </data>
  <data name="OutBTD屏处于第7页面" xml:space="preserve">
    <value>TD屏处于第7页面</value>
  </data>
  <data name="OutBTD屏处于第8页面" xml:space="preserve">
    <value>TD屏处于第8页面</value>
  </data>
  <data name="OutBTD屏处于第9页面" xml:space="preserve">
    <value>TD屏处于第9页面</value>
  </data>
  <data name="OutBTD屏处于第10页面" xml:space="preserve">
    <value>TD屏处于第10页面</value>
  </data>
  <data name="OutBTD屏处于软件切除界面" xml:space="preserve">
    <value>TD屏处于软件切除界面</value>
  </data>
  <data name="OutBTS屏处于仪器查询页面3个表盘" xml:space="preserve">
    <value>TS屏处于仪器查询页面（3个表盘）</value>
  </data>
  <data name="OutBTS屏处于电子仪器第1页面" xml:space="preserve">
    <value>TS屏处于电子仪器第1页面</value>
  </data>
  <data name="OutBTS屏处于电子仪器第2页面" xml:space="preserve">
    <value>TS屏处于电子仪器第2页面</value>
  </data>
  <data name="OutBTS屏处于电子仪器第3页面" xml:space="preserve">
    <value>TS屏处于电子仪器第3页面</value>
  </data>
  <data name="OutBTD屏处于故障历史页面" xml:space="preserve">
    <value>TD屏处于故障历史页面</value>
  </data>
  <data name="OutB启动自动制动实验" xml:space="preserve">
    <value>启动自动制动实验</value>
  </data>
  <data name="OutB停止自动制动实验" xml:space="preserve">
    <value>停止自动制动实验</value>
  </data>
  <data name="OutB启动导向制动实验" xml:space="preserve">
    <value>启动导向制动实验</value>
  </data>
  <data name="OutB停止导向制动实验" xml:space="preserve">
    <value>停止导向制动实验</value>
  </data>
  <data name="OutB启动备用制动实验" xml:space="preserve">
    <value>启动备用制动实验</value>
  </data>
  <data name="OutB停止备用制动实验" xml:space="preserve">
    <value>停止备用制动实验</value>
  </data>
</root>
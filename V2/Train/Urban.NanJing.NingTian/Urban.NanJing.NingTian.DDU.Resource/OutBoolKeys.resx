<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="紧急广播_1" xml:space="preserve">
    <value>紧急广播-1</value>
  </data>
  <data name="紧急广播_2" xml:space="preserve">
    <value>紧急广播-2</value>
  </data>
  <data name="紧急广播_3" xml:space="preserve">
    <value>紧急广播-3</value>
  </data>
  <data name="紧急广播_4" xml:space="preserve">
    <value>紧急广播-4</value>
  </data>
  <data name="紧急广播_5" xml:space="preserve">
    <value>紧急广播-5</value>
  </data>
  <data name="紧急广播_6" xml:space="preserve">
    <value>紧急广播-6</value>
  </data>
  <data name="紧急广播_7" xml:space="preserve">
    <value>紧急广播-7</value>
  </data>
  <data name="紧急广播_8" xml:space="preserve">
    <value>紧急广播-8</value>
  </data>
  <data name="紧急广播_9" xml:space="preserve">
    <value>紧急广播-9</value>
  </data>
  <data name="紧急广播_10" xml:space="preserve">
    <value>紧急广播-10</value>
  </data>
  <data name="紧急广播_11" xml:space="preserve">
    <value>紧急广播-11</value>
  </data>
  <data name="紧急广播_12" xml:space="preserve">
    <value>紧急广播-12</value>
  </data>
  <data name="紧急广播_13" xml:space="preserve">
    <value>紧急广播-13</value>
  </data>
  <data name="紧急广播_14" xml:space="preserve">
    <value>紧急广播-14</value>
  </data>
  <data name="紧急广播_15" xml:space="preserve">
    <value>紧急广播-15</value>
  </data>
  <data name="紧急广播_16" xml:space="preserve">
    <value>紧急广播-16</value>
  </data>
  <data name="紧急广播_17" xml:space="preserve">
    <value>紧急广播-17</value>
  </data>
  <data name="紧急广播_18" xml:space="preserve">
    <value>紧急广播-18</value>
  </data>
  <data name="紧急广播_19" xml:space="preserve">
    <value>紧急广播-19</value>
  </data>
  <data name="紧急广播_20" xml:space="preserve">
    <value>紧急广播-20</value>
  </data>
  <data name="紧急广播_21" xml:space="preserve">
    <value>紧急广播-21</value>
  </data>
  <data name="紧急广播_22" xml:space="preserve">
    <value>紧急广播-22</value>
  </data>
  <data name="紧急广播_23" xml:space="preserve">
    <value>紧急广播-23</value>
  </data>
  <data name="紧急广播_24" xml:space="preserve">
    <value>紧急广播-24</value>
  </data>
  <data name="紧急广播_25" xml:space="preserve">
    <value>紧急广播-25</value>
  </data>
  <data name="紧急广播_26" xml:space="preserve">
    <value>紧急广播-26</value>
  </data>
  <data name="紧急广播_27" xml:space="preserve">
    <value>紧急广播-27</value>
  </data>
  <data name="紧急广播_28" xml:space="preserve">
    <value>紧急广播-28</value>
  </data>
  <data name="紧急广播_29" xml:space="preserve">
    <value>紧急广播-29</value>
  </data>
  <data name="自检开始" xml:space="preserve">
    <value>自检开始</value>
  </data>
  <data name="空调模式" xml:space="preserve">
    <value>空调模式</value>
  </data>
  <data name="手动模式" xml:space="preserve">
    <value>手动模式</value>
  </data>
  <data name="半自动模式" xml:space="preserve">
    <value>半自动模式</value>
  </data>
  <data name="自动模式" xml:space="preserve">
    <value>自动模式</value>
  </data>
  <data name="上行" xml:space="preserve">
    <value>上行</value>
  </data>
  <data name="下行" xml:space="preserve">
    <value>下行</value>
  </data>
  <data name="确认" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="到站广播" xml:space="preserve">
    <value>到站广播</value>
  </data>
  <data name="跳站" xml:space="preserve">
    <value>跳站</value>
  </data>
  <data name="紧急广播" xml:space="preserve">
    <value>紧急广播</value>
  </data>
  <data name="预报站" xml:space="preserve">
    <value>预报站</value>
  </data>
  <data name="出发确认" xml:space="preserve">
    <value>出发确认</value>
  </data>
</root>
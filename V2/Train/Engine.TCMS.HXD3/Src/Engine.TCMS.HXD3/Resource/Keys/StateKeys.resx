<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Root1" xml:space="preserve">
    <value>Root1</value>
  </data>
  <data name="Root2" xml:space="preserve">
    <value>Root2</value>
  </data>
  <data name="Root3" xml:space="preserve">
    <value>Root3</value>
  </data>
  <data name="Root_机器状态" xml:space="preserve">
    <value>Root-机器状态</value>
  </data>
  <data name="Root_机器状态_开关状态" xml:space="preserve">
    <value>Root-机器状态-开关状态</value>
  </data>
  <data name="Root_机器状态_风机状态" xml:space="preserve">
    <value>Root-机器状态-风机状态</value>
  </data>
  <data name="Root_机器状态_辅助电源" xml:space="preserve">
    <value>Root-机器状态-辅助电源</value>
  </data>
  <data name="Root_机器状态_空制状态" xml:space="preserve">
    <value>Root-机器状态-空制状态</value>
  </data>
  <data name="Root_机器状态_故障履历" xml:space="preserve">
    <value>Root-机器状态-故障履历</value>
  </data>
  <data name="Root_机器状态_故障履历_试运行" xml:space="preserve">
    <value>Root-机器状态-故障履历-试运行</value>
  </data>
  <data name="Root_试运行" xml:space="preserve">
    <value>Root-试运行</value>
  </data>
  <data name="Root_开放状态" xml:space="preserve">
    <value>Root-开放状态</value>
  </data>
  <data name="Root_检修状态" xml:space="preserve">
    <value>Root-检修状态</value>
  </data>
  <data name="Root_检修状态_密码已设定" xml:space="preserve">
    <value>Root-检修状态-密码已设定</value>
  </data>
  <data name="Root_检修状态_记录" xml:space="preserve">
    <value>Root-检修状态-记录</value>
  </data>
  <data name="Root_检修状态_设定" xml:space="preserve">
    <value>Root-检修状态-设定</value>
  </data>
  <data name="Root_检修状态_试验" xml:space="preserve">
    <value>Root-检修状态-试验</value>
  </data>
  <data name="Root_检修状态_状态" xml:space="preserve">
    <value>Root-检修状态-状态</value>
  </data>
  <data name="Root_检修状态_状态_信号信息" xml:space="preserve">
    <value>Root-检修状态-状态-信号信息</value>
  </data>
  <data name="Root_检修状态_状态_累计距离" xml:space="preserve">
    <value>Root-检修状态-状态-累计距离</value>
  </data>
  <data name="Root_检修状态_状态_动作次数" xml:space="preserve">
    <value>Root-检修状态-状态-动作次数</value>
  </data>
  <data name="Root_检修状态_状态_传送信息" xml:space="preserve">
    <value>Root-检修状态-状态-传送信息</value>
  </data>
  <data name="Root_检修状态_状态_版本" xml:space="preserve">
    <value>Root-检修状态-状态-版本</value>
  </data>
  <data name="Root_检修状态_试验_主司控器" xml:space="preserve">
    <value>Root-检修状态-试验-主司空器</value>
  </data>
  <data name="Root_检修状态_试验_显示灯" xml:space="preserve">
    <value>Root-检修状态-试验-显示灯</value>
  </data>
  <data name="Root_检修状态_试验_起动" xml:space="preserve">
    <value>Root-检修状态-试验-起动</value>
  </data>
  <data name="Root_检修状态_试验_辅助电源" xml:space="preserve">
    <value>Root-检修状态-试验-辅助电源</value>
  </data>
  <data name="Root_检修状态_试验_零级位" xml:space="preserve">
    <value>Root-检修状态-试验-零级位</value>
  </data>
</root>
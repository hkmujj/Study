<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:configModel="clr-namespace:LightRail.HMI.GZYGDC.Model.ConfigModel"
                    xmlns:interface="clr-namespace:LightRail.HMI.GZYGDC.Interface"
                    xmlns:view="clr-namespace:MMI.Facility.WPFInfrastructure.View;assembly=MMI.Facility.WPFInfrastructure"
                    xmlns:model="clr-namespace:LightRail.HMI.GZYGDC.Model"
                    xmlns:viewModel="clr-namespace:LightRail.HMI.GZYGDC.ViewModel">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Styles/GZYGDCButtonStyle.xaml"/>
        <ResourceDictionary Source="../Converter/Converter.xaml"/>
        <ResourceDictionary Source="../Text/StringResource.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    
    <Style x:Key="RunningViewPowerStatusProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Orientation" Value="Vertical"></Setter>
        <Setter Property="Background" Value="#d1dadf"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Name="border"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                        <Grid>
                            <Rectangle Name="PART_Track" Fill="{TemplateBinding Background}" />
                            <Rectangle Name="PART_Indicator"
                                       HorizontalAlignment="Left"
                                       Fill="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="border" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RunningViewTractionProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Orientation" Value="Vertical"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="#5ebf2a"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Name="border"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                        <Grid>
                            <Rectangle Name="PART_Track" Fill="{TemplateBinding Background}" />
                            <Rectangle Name="PART_Indicator"
                                       HorizontalAlignment="Left"
                                       Fill="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="border" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RunningViewBrakeProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Orientation" Value="Vertical"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="#ff656e"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Name="border"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                        <Grid>
                            <Rectangle Name="PART_Track" Fill="{TemplateBinding Background}" />
                            <Rectangle Name="PART_Indicator"
                                       HorizontalAlignment="Left"
                                       Fill="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="border" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SoundCtrlProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Orientation" Value="Horizontal"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="#affd52"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Name="border"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                        <Grid>
                            <Rectangle Name="PART_Track" Fill="{TemplateBinding Background}" />
                            <Rectangle Name="PART_Indicator"
                                       HorizontalAlignment="Left"
                                       Fill="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="border" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmmergencyBroadcastListBox" TargetType="ListBox">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Height="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                        AncestorType={x:Type ListBox}},
                                                         Path=ActualHeight,
                                                         Converter={StaticResource MathConverter},
                                                         ConverterParameter=x/8}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Transparent"></Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="configModel:EmergencyBroadcastItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40*"></ColumnDefinition>
                            <ColumnDefinition Width="10*"></ColumnDefinition>
                            <ColumnDefinition Width="650*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid Column="0">
                            <ToggleButton Style="{StaticResource LightGrayToggleButtonStyle}" Content="{Binding Index}" IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                          Command="{Binding Source={x:Static viewModel:EmergencyBroadcastViewModel.Instance}, Path=Controller.SendBroadcastCommand}"
                                          CommandParameter="{Binding}"></ToggleButton>
                        </Grid>
                        <Grid Column="2">
                            <ToggleButton Style="{StaticResource LightGrayToggleButtonStyle}" Content="{Binding Name}" IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                         Command="{Binding Source={x:Static viewModel:EmergencyBroadcastViewModel.Instance}, Path=Controller.SendBroadcastCommand}"
                                         CommandParameter="{Binding}"></ToggleButton>
                        </Grid>
                    </Grid>
                </DataTemplate>
  
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="EventInfoItemsControl" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30*"></ColumnDefinition>
                                <ColumnDefinition Width="30*"></ColumnDefinition>
                                <ColumnDefinition Width="40*"></ColumnDefinition>
                                <ColumnDefinition Width="90*"></ColumnDefinition>
                                <ColumnDefinition Width="20*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="White"></Setter>
                                    <Setter Property="FontFamily" Value="宋体"></Setter>
                                    <Setter Property="FontSize" Value="16"></Setter>
                                    <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                                    <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid Column="0">
                                <TextBlock Text="{StaticResource EventInfoView.FaultCode}"></TextBlock>
                            </Grid>
                            <Grid Column="1">
                                <TextBlock Text="{StaticResource EventInfoView.FaultLevel}"></TextBlock>
                            </Grid>
                            <Grid Column="2">
                                <TextBlock Text="{StaticResource EventInfoView.Date/Time}"></TextBlock>
                            </Grid>
                            <Grid Column="3">
                                <TextBlock Text="{StaticResource EventInfoView.FaultContent}"></TextBlock>
                            </Grid>
                            <Grid Column="4">
                                <TextBlock Text="{StaticResource EventInfoView.DDSStatus}"></TextBlock>
                            </Grid>
                        </Grid>
                        <Border Grid.Row="1" 
                                Grid.RowSpan="10" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="White" 
                                BorderThickness="1">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"></ItemsPresenter>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"></StackPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="interface:IEventInfo">
                    <RadioButton GroupName="event" IsChecked="{Binding IsChecked,Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}">
                        <RadioButton.Template>
                            <ControlTemplate TargetType="RadioButton">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#9A9385"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Background" Value="Transparent"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </RadioButton.Template>
                        <RadioButton.Content>
                            <Grid view:GridLine.Brush="White"
                                  view:GridLine.Style="ShowAll"
                                  view:GridLine.Width="1"
                                  view:GridLine.WidthStyle="Different"
                                  Margin="0,0,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10*"></ColumnDefinition>
                                    <ColumnDefinition Width="220*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid Column="0" ColumnSpan="2">
                                    <Grid Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}},
                                Path=ActualHeight,
                                Converter={StaticResource MathConverter},
                                ConverterParameter=x/12.5}">
                                        <Grid.ColumnDefinitions >
                                            <ColumnDefinition Width="10*"></ColumnDefinition>
                                            <ColumnDefinition Width="20*"></ColumnDefinition>
                                            <ColumnDefinition Width="20*"></ColumnDefinition>
                                            <ColumnDefinition Width="60*"></ColumnDefinition>
                                            <ColumnDefinition Width="100*"></ColumnDefinition>
                                            <ColumnDefinition Width="10*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="White"></Setter>
                                                <Setter Property="FontFamily" Value="宋体"></Setter>
                                                <Setter Property="FontSize" Value="16"></Setter>
                                                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                            </Style>
                                        </Grid.Resources>
                                        <Grid Column="0">
                                            <TextBlock Text="{Binding Number}"></TextBlock>
                                        </Grid>
                                        <Grid Column="1">
                                            <TextBlock Text="{Binding FaultCode}"></TextBlock>
                                        </Grid>
                                        <Grid Column="2">
                                            <TextBlock Text="{Binding Level, Converter={StaticResource DescritionConverter}}"></TextBlock>
                                        </Grid>
                                        <Grid Column="3">
                                            <TextBlock Text="{Binding HappenTime,StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"></TextBlock>
                                        </Grid>
                                        <Grid Column="4">
                                            <TextBlock Text="{Binding Describe}"></TextBlock>
                                        </Grid>
                                        <Grid Column="5">
                                            <TextBlock Text=""></TextBlock>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </RadioButton.Content>
                    </RadioButton>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    

</ResourceDictionary>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MMI屏亮屏" xml:space="preserve">
    <value>MMI屏亮屏</value>
  </data>
  <data name="离站倒计时显示" xml:space="preserve">
    <value>离站倒计时显示</value>
  </data>
  <data name="ATOFault" xml:space="preserve">
    <value>ATO Fault</value>
  </data>
  <data name="常用制动" xml:space="preserve">
    <value>常用制动</value>
  </data>
  <data name="触发紧急制动" xml:space="preserve">
    <value>触发紧急制动</value>
  </data>
  <data name="ATB模式" xml:space="preserve">
    <value>ATB模式</value>
  </data>
  <data name="ATO模式" xml:space="preserve">
    <value>ATO模式</value>
  </data>
  <data name="ATP模式" xml:space="preserve">
    <value>ATP模式</value>
  </data>
  <data name="RM模式" xml:space="preserve">
    <value>RM模式</value>
  </data>
  <data name="ATC切除" xml:space="preserve">
    <value>ATC切除</value>
  </data>
  <data name="退行模式" xml:space="preserve">
    <value>退行模式</value>
  </data>
  <data name="ATB允许" xml:space="preserve">
    <value>ATB允许</value>
  </data>
  <data name="ATO允许" xml:space="preserve">
    <value>ATO允许</value>
  </data>
  <data name="ATP允许" xml:space="preserve">
    <value>ATP允许</value>
  </data>
  <data name="RM允许" xml:space="preserve">
    <value>RM允许</value>
  </data>
  <data name="左侧门允许" xml:space="preserve">
    <value>左侧门允许</value>
  </data>
  <data name="右侧门允许" xml:space="preserve">
    <value>右侧门允许</value>
  </data>
  <data name="两侧门允许" xml:space="preserve">
    <value>两侧门允许</value>
  </data>
  <data name="所有车门关闭" xml:space="preserve">
    <value>所有车门关闭</value>
  </data>
  <data name="有车门打开" xml:space="preserve">
    <value>有车门打开</value>
  </data>
  <data name="运行时车门打开" xml:space="preserve">
    <value>运行时车门打开</value>
  </data>
  <data name="扣车" xml:space="preserve">
    <value>扣车</value>
  </data>
  <data name="跳停" xml:space="preserve">
    <value>跳停</value>
  </data>
  <data name="显示距离" xml:space="preserve">
    <value>显示距离</value>
  </data>
  <data name="MMI屏一直启动" xml:space="preserve">
    <value>MMI屏一直启动</value>
  </data>
  <data name="MMI屏启动失败" xml:space="preserve">
    <value>MMI屏列车激活</value>
  </data>
  <data name="MMI屏启动成功" xml:space="preserve">
    <value>MMI屏司机室激活</value>
  </data>
  <data name="目标距离显示" xml:space="preserve">
    <value>目标距离显示</value>
  </data>
  <data name="目标速度显示" xml:space="preserve">
    <value>目标速度显示</value>
  </data>
  <data name="零速标志" xml:space="preserve">
    <value>零速标志</value>
  </data>
  <data name="超速制动标志" xml:space="preserve">
    <value>超速制动标志（红色小方块）</value>
  </data>
  <data name="常用制动闪烁" xml:space="preserve">
    <value>常用制动闪烁</value>
  </data>
  <data name="信号屏唤醒" xml:space="preserve">
    <value>信号屏唤醒</value>
  </data>
</root>
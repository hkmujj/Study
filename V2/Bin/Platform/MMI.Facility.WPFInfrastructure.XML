<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MMI.Facility.WPFInfrastructure</name>
    </assembly>
    <members>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.AutoPopulateExportedViewsBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.AutoPopulateExportedViewsBehavior.OnAttach">
            <summary>
            Override this method to perform the logic after the behavior has been attached.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.AutoPopulateExportedViewsBehavior.OnImportsSatisfied">
            <summary>
            在满足部件的导入并可安全使用时调用。
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.AutoPopulateExportedViewsBehavior.RegisteredViews">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.DataGridCommandBehavior">
            <summary>
            DataGrid 的行为
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.DataGridCommandBehavior.#ctor(System.Windows.Controls.DataGrid)">
            <summary>
            
            </summary>
            <param name="dataGrid"></param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.DialogActivationBehavior">
            <summary>
            Defines a behavior that creates a Dialog to display the active view of the target <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/>.
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Behaviors.DialogActivationBehavior.BehaviorKey">
            <summary>
            The key of this behavior
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.DialogActivationBehavior.HostControl">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DependencyObject"/> that the <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/> is attached to.
            </summary>
            <value>A <see cref="T:System.Windows.DependencyObject"/> that the <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/> is attached to.
            This is usually a <see cref="T:System.Windows.FrameworkElement"/> that is part of the tree.</value>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.DialogActivationBehavior.OnAttach">
            <summary>
            Performs the logic after the behavior has been attached.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.DialogActivationBehavior.CreateWindow">
            <summary>
            Override this method to create an instance of the <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow"/> that 
            will be shown when a view is activated.
            </summary>
            <returns>
            An instance of <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow"/> that will be shown when a 
            view is activated on the target <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/>.
            </returns>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.IViewRegionRegistration">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.IViewRegionRegistration.ViewRegionCollection">
            <summary>
            RegionNameCollection 和 RegionName 只能有一种情况 ， 如果  RegionName 有值 ， 将忽略 RegionNameCollection
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.IViewRegionRegistration.ArrayDataType">
            <summary>
            ViewRegionCollection 的数据类型
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.IViewRegionRelevance">
            <summary>
            View region 关系
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.IViewRegionRelevance.RegionName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.IViewRegionRelevance.IsDefaultView">
            <summary>
            IsDefaultView  在 RegionName 有值时有效
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.IViewRegionRelevance.Priority">
            <summary>
            Priority ， 越小排在越前,  在 RegionName 有值时有效
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow">
            <summary>
            Defines the interface for the Dialogs that are shown by <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.DialogActivationBehavior"/>.
            </summary>
        </member>
        <member name="E:MMI.Facility.WPFInfrastructure.Behaviors.IWindow.Closed">
            <summary>
            Ocurrs when the <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow"/> is closed.
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.IWindow.Content">
            <summary>
            Gets or sets the content for the <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow"/>.
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.IWindow.Owner">
            <summary>
            Gets or sets the owner control of the <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow"/>.
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.IWindow.Style">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> to apply to the <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow"/>.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.IWindow.Show">
            <summary>
            Opens the <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow"/>.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.IWindow.Close">
            <summary>
            Closes the <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow"/>.
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.PasswordBoxBindingBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Behaviors.PasswordBoxBindingBehavior.PasswordProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.PasswordBoxBindingBehavior.Password">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.PasswordBoxBindingBehavior.OnAttached">
            <summary>在行为附加到 AssociatedObject 后调用。</summary>
            <remarks>替代它以便将功能挂钩到 AssociatedObject。</remarks>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.PasswordBoxBindingBehavior.OnDetaching">
            <summary>在行为与其 AssociatedObject 分离时（但在它实际发生之前）调用。</summary>
            <remarks>替代它以便将功能从 AssociatedObject 中解除挂钩。</remarks>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.RegionPopupBehaviors">
            <summary>
            Declares the Attached Properties and Behaviors for implementing Popup regions.
            </summary>
            <remarks>
            Although the fastest way is to create a RegionAdapter for a Window and register it with the RegionAdapterMappings,
            this would be conceptually incorrect because we want to create a new popup window everytime a view is added 
            (instead of having a Window as a host control and replacing its contents everytime Views are added, as other adapters do).
            This is why we have a different class for this behavior, instead of reusing the <see cref="F:Microsoft.Practices.Prism.Regions.RegionManager.RegionNameProperty"/> attached property.
            </remarks>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Behaviors.RegionPopupBehaviors.CreatePopupRegionWithNameProperty">
            <summary>
            The name of the Popup <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/>.
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Behaviors.RegionPopupBehaviors.ContainerWindowStyleProperty">
            <summary>
            The <see cref="T:System.Windows.Style"/> to set to the Popup.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.RegionPopupBehaviors.GetCreatePopupRegionWithName(System.Windows.DependencyObject)">
            <summary>
            Gets the name of the Popup <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/>.
            </summary>
            <param name="owner">Owner of the Popup.</param>
            <returns>The name of the Popup <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/>.</returns>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.RegionPopupBehaviors.SetCreatePopupRegionWithName(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the name of the Popup <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/>.
            </summary>
            <param name="owner">Owner of the Popup.</param>
            <param name="value">Name of the Popup <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/>.</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.RegionPopupBehaviors.GetContainerWindowStyle(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="T:System.Windows.Style"/> for the Popup.
            </summary>
            <param name="owner">Owner of the Popup.</param>
            <returns>The <see cref="T:System.Windows.Style"/> for the Popup.</returns>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.RegionPopupBehaviors.SetContainerWindowStyle(System.Windows.DependencyObject,System.Windows.Style)">
            <summary>
            Sets the <see cref="T:System.Windows.Style"/> for the Popup.
            </summary>
            <param name="owner">Owner of the Popup.</param>
            <param name="style"><see cref="T:System.Windows.Style"/> for the Popup.</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.RegionPopupBehaviors.RegisterNewPopupRegion(System.Windows.DependencyObject,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/> and registers it in the default <see cref="T:Microsoft.Practices.Prism.Regions.IRegionManager"/>
            attaching to it a <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.DialogActivationBehavior"/> behavior.
            </summary>
            <param name="owner">The owner of the Popup.</param>
            <param name="regionName">The name of the <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/>.</param>
            <remarks>
            This method would typically not be called directly, instead the behavior 
            should be set through the Attached Property <see cref="F:MMI.Facility.WPFInfrastructure.Behaviors.RegionPopupBehaviors.CreatePopupRegionWithNameProperty"/>.
            </remarks>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.ReturnCommandBehavior">
            <summary>
            Defines a behavior that executes a <see cref="T:System.Windows.Input.ICommand"/> when the Return key is pressed inside a <see cref="T:System.Windows.Controls.TextBox"/>.
            </summary>
            <remarks>This behavior also supports setting a basic watermark on the <see cref="T:System.Windows.Controls.TextBox"/>.</remarks>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.ReturnCommandBehavior.#ctor(System.Windows.Controls.TextBox)">
            <summary>
            Initializes a new instance of <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.ReturnCommandBehavior"/>.
            </summary>
            <param name="textBox">The <see cref="T:System.Windows.Controls.TextBox"/> over which the <see cref="T:System.Windows.Input.ICommand"/> will work.</param>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.ReturnCommandBehavior.DefaultTextAfterCommandExecution">
            <summary>
            Gets or Sets the text which is set as water mark on the <see cref="T:System.Windows.Controls.TextBox"/>.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.ReturnCommandBehavior.KeyPressed(System.Windows.Input.Key)">
            <summary>
            Executes the <see cref="T:System.Windows.Input.ICommand"/> when <paramref name="key"/> is <see cref="F:System.Windows.Input.Key.Enter"/>.
            </summary>
            <param name="key">The key pressed on the <see cref="T:System.Windows.Controls.TextBox"/>.</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute.#ctor(MMI.Facility.WPFInfrastructure.Behaviors.ViewRegionArrayDataType,System.String[])">
            <summary>
             RegionName1, IsDefaultView1, Priority1, RegionName2, IsDefaultView2, Priority2...
            </summary>
            <param name="dataType">一个view rgion 对象类型</param>
            <param name="viewRegions"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute.#ctor(System.String,MMI.Facility.WPFInfrastructure.Behaviors.ViewRegionArrayDataType,System.String[])">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <param name="dataType">一个view rgion 对象类型</param>
            <param name="viewRegions"></param>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute.ViewName">
            <summary>
            ViewName
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute.ViewRegionCollection">
            <summary>
            RegionNameCollection 和 RegionName 只能有一种情况 ， 如果  RegionName 有值 ， 将忽略 RegionNameCollection
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute.RegionName">
            <summary>
            RegionNameCollection 和 RegionName 只能有一种情况 ， 如果  RegionName 有值 ， 将忽略 RegionNameCollection
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute.IsDefaultView">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.ViewExportAttribute.Priority">
            <summary>
            Priority ， 越小排在越前
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.ViewRegionArrayDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Behaviors.ViewRegionArrayDataType.Invalidate">
            <summary>
            无效的
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Behaviors.ViewRegionArrayDataType.Type1">
            <summary>
            RegionName1, IsDefaultView1, Priority1, RegionName2, IsDefaultView2, Priority2...
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.ViewRegionRelevance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.ViewRegionRelevance.RegionName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.ViewRegionRelevance.Priority">
            <summary>
            Priority ， 越小排在越前,  在 RegionName 有值时有效
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.WindowDialogActivationBehavior">
            <summary>
            Specifies the <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.DialogActivationBehavior"/> class for using the behavior on WPF.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.WindowDialogActivationBehavior.CreateWindow">
            <summary>
            Creates a wrapper for the WPF <see cref="T:System.Windows.Window"/>.
            </summary>
            <returns>Instance of the <see cref="T:System.Windows.Window"/> wrapper.</returns>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Behaviors.WindowWrapper">
            <summary>
            Defines a wrapper for the <see cref="T:System.Windows.Window"/> class that implements the <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.IWindow"/> interface.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.WindowWrapper.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:MMI.Facility.WPFInfrastructure.Behaviors.WindowWrapper"/>.
            </summary>
        </member>
        <member name="E:MMI.Facility.WPFInfrastructure.Behaviors.WindowWrapper.Closed">
            <summary>
            Ocurrs when the <see cref="T:System.Windows.Window"/> is closed.
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.WindowWrapper.Content">
            <summary>
            Gets or Sets the content for the <see cref="T:System.Windows.Window"/>.
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.WindowWrapper.Owner">
            <summary>
            Gets or Sets the <see cref="P:System.Windows.Window.Owner"/> control of the <see cref="T:System.Windows.Window"/>.
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Behaviors.WindowWrapper.Style">
            <summary>
            Gets or Sets the <see cref="P:System.Windows.FrameworkElement.Style"/> to apply to the <see cref="T:System.Windows.Window"/>.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.WindowWrapper.Show">
            <summary>
            Opens the <see cref="T:System.Windows.Window"/>.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Behaviors.WindowWrapper.Close">
            <summary>
            Closes the <see cref="T:System.Windows.Window"/>.
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Command.CommandManager">
            <summary>
            命令管理器
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.ResourceKeyToResourceContentResource">
            <summary>
            ResourceKeyToResourceContentResource
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.ResourceKeyToResourceContentResource.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>将源值转换为绑定源的值。数据绑定引擎在将值从绑定源传播给绑定目标时，调用此方法。</summary>
            <returns>转换后的值。如果该方法返回 null，则使用有效的 null 值。<see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 的返回值表示转换器没有生成任何值，且绑定将使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />（如果可用），否则将使用默认值。<see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> 的返回值表示绑定不传输值，或不使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 或默认值。</returns>
            <param name="values">
            <see cref="T:System.Windows.Data.MultiBinding" /> 中源绑定生成的值的数组。值 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 表示源绑定没有要提供以进行转换的值。</param>
            <param name="targetType">绑定目标属性的类型。</param>
            <param name="parameter">要使用的转换器参数。</param>
            <param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.ResourceKeyToResourceContentResource.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>将绑定目标值转换为源绑定值。</summary>
            <returns>从目标值转换回源值的值的数组。</returns>
            <param name="value">绑定目标生成的值。</param>
            <param name="targetTypes">要转换到的类型数组。数组长度指示为要返回的方法所建议的值的数量与类型。</param>
            <param name="parameter">要使用的转换器参数。</param>
            <param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.BoolToObjectConverter">
            <summary>
            bool to object
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.BoolToObjectConverter.TrueObject">
            <summary>
            为true 时的值
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.BoolToObjectConverter.FalseObject">
            <summary>
            为false 时的值
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.BoolToObjectConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定源生成的值。</param><param name="targetType">绑定目标属性的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.BoolToObjectConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定目标生成的值。</param><param name="targetType">要转换到的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.BoolVisibilityConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.BoolVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定源生成的值。</param><param name="targetType">绑定目标属性的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.BoolVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定目标生成的值。</param><param name="targetType">要转换到的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.ConditionContentConverter">
            <summary>
            条件选择内容转换器
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.ConditionContentConverter.If">
            <summary>
            If
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.ConditionContentConverter.ElseIfs">
            <summary>
            ElseIfs
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.ConditionContentConverter.Else">
            <summary>
            Else
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.ConditionContentConverter.#ctor">
            <summary>
            ConditionContentConverter
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.ConditionContentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>转换值。</summary>
            <returns>转换后的值。 如果该方法返回 null，则使用有效的 null 值。</returns>
            <param name="value">绑定源生成的值。</param>
            <param name="targetType">绑定目标属性的类型。</param>
            <param name="parameter">要使用的转换器参数。</param>
            <param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.ConditionContentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>转换值。</summary>
            <returns>转换后的值。 如果该方法返回 null，则使用有效的 null 值。</returns>
            <param name="value">绑定目标生成的值。</param>
            <param name="targetType">要转换到的类型。</param>
            <param name="parameter">要使用的转换器参数。</param>
            <param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.EnumDescritionConverter">
            <summary>
            枚举描述转换
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.GetItemIndexOfCollectionConverter">
            <summary>
            获取元素在集合中的索引 + parameter 偏移
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.GetItemIndexOfCollectionConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            将源值转换为绑定源的值。数据绑定引擎在将值从绑定源传播给绑定目标时，调用此方法。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。<see cref="T:System.Windows.DependencyProperty"/>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"/> 的返回值表示转换器没有生成任何值，且绑定将使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/>（如果可用），否则将使用默认值。<see cref="T:System.Windows.Data.Binding"/>.<see cref="F:System.Windows.Data.Binding.DoNothing"/> 的返回值表示绑定不传输值，或不使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> 或默认值。
            </returns>
            <param name="values"><see cref="T:System.Windows.Data.MultiBinding"/> 中源绑定生成的值的数组。值 <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> 表示源绑定没有要提供以进行转换的值。</param><param name="targetType">绑定目标属性的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.GetItemIndexOfCollectionConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            将绑定目标值转换为源绑定值。
            </summary>
            <returns>
            从目标值转换回源值的值的数组。
            </returns>
            <param name="value">绑定目标生成的值。</param><param name="targetTypes">要转换到的类型数组。数组长度指示为要返回的方法所建议的值的数量与类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.GetItemIndexOfCollectionConverter.ProvideValue(System.IServiceProvider)">
            <summary>
            在派生类中实现时，返回一个对象，此对象被设置为此标记扩展的目标属性的值。
            </summary>
            <returns>
            要在应用了扩展的属性上设置的对象值。
            </returns>
            <param name="serviceProvider">可以为标记扩展提供服务的对象。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.IsNullToVisibilityConverter">
            <summary>
            是否为空转化为是否可见
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.IsNullToVisibilityConverter.VisibilityWhenNull">
            <summary>
            null 时的值
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.IsNullToVisibilityConverter.VisibilityWhenNotNull">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.IsNullToVisibilityConverter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.MathConverter">
            <summary>
            Value converter that performs arithmetic calculations over its argument(s)
            </summary>
            <remarks>
            MathConverter can act as a value converter, or as a multivalue converter (WPF only).
            It is also a markup extension (WPF only) which allows to avoid declaring resources,
            ConverterParameter must contain an arithmetic expression over converter arguments. Operations supported are +, -, * and /
            Single argument of a value converter may referred as x, a, or {0}
            Arguments of multi value converter may be referred as x,y,z,t (first-fourth argument), or a,b,c,d, or {0}, {1}, {2}, {3}, {4}, ...
            The converter supports arithmetic expressions of arbitrary complexity, including nested subexpressions
            </remarks>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.MathConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>转换值。</summary>
            <returns>转换后的值。如果该方法返回 null，则使用有效的 null 值。</returns>
            <param name="value">绑定源生成的值。</param>
            <param name="targetType">绑定目标属性的类型。</param>
            <param name="parameter">要使用的转换器参数。</param>
            <param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.MathConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>转换值。</summary>
            <returns>转换后的值。如果该方法返回 null，则使用有效的 null 值。</returns>
            <param name="value">绑定目标生成的值。</param>
            <param name="targetType">要转换到的类型。</param>
            <param name="parameter">要使用的转换器参数。</param>
            <param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.MathConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>将源值转换为绑定源的值。数据绑定引擎在将值从绑定源传播给绑定目标时，调用此方法。</summary>
            <returns>转换后的值。如果该方法返回 null，则使用有效的 null 值。<see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 的返回值表示转换器没有生成任何值，且绑定将使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />（如果可用），否则将使用默认值。<see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> 的返回值表示绑定不传输值，或不使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 或默认值。</returns>
            <param name="values">
            <see cref="T:System.Windows.Data.MultiBinding" /> 中源绑定生成的值的数组。值 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 表示源绑定没有要提供以进行转换的值。</param>
            <param name="targetType">绑定目标属性的类型。</param>
            <param name="parameter">要使用的转换器参数。</param>
            <param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.MathConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>将绑定目标值转换为源绑定值。</summary>
            <returns>从目标值转换回源值的值的数组。</returns>
            <param name="value">绑定目标生成的值。</param>
            <param name="targetTypes">要转换到的类型数组。数组长度指示为要返回的方法所建议的值的数量与类型。</param>
            <param name="parameter">要使用的转换器参数。</param>
            <param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.MathConverter.ProvideValue(System.IServiceProvider)">
            <summary>在派生类中实现时，返回一个对象，此对象被设置为此标记扩展的目标属性的值。</summary>
            <returns>要在应用了扩展的属性上设置的对象值。</returns>
            <param name="serviceProvider">可以为标记扩展提供服务的对象。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.MathConverter.ProcessException(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.MultiplicationConverter">
            <summary>
            乘法
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.MultiplicationConverter.Multiplier">
            <summary>
            乘数
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.NegativeBoolConverter">
            <summary>
            bool 取反
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.NegativeBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定源生成的值。</param><param name="targetType">绑定目标属性的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.NegativeBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定目标生成的值。</param><param name="targetType">要转换到的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.NullConverter">
            <summary>
            空的转换, 可用于测试
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.NullConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定源生成的值。</param><param name="targetType">绑定目标属性的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.NullConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定目标生成的值。</param><param name="targetType">要转换到的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.ReverseBoolConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.ReverseBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定源生成的值。</param><param name="targetType">绑定目标属性的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.ReverseBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定目标生成的值。</param><param name="targetType">要转换到的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.SelectObjectContentConverter">
            <summary>
            选择对象的内容
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.SelectObjectContentConverter.ObjectContentCollection">
            <summary>
            对象的内容 集合
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.SelectObjectContentConverter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.SelectObjectContentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定源生成的值。</param><param name="targetType">绑定目标属性的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.SelectObjectContentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换值。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。
            </returns>
            <param name="value">绑定目标生成的值。</param><param name="targetType">要转换到的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.ObjectContentPair">
            <summary>
            对象的内容
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Converter.ObjectContentPair.ContentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.ObjectContentPair.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Converter.ObjectContentPair.Key">
            <summary>
            key
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Converter.ValueMultiplicativeConverter">
            <summary>
            数据相乘
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.ValueMultiplicativeConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            将源值转换为绑定源的值。数据绑定引擎在将值从绑定源传播给绑定目标时，调用此方法。
            </summary>
            <returns>
            转换后的值。如果该方法返回 null，则使用有效的 null 值。<see cref="T:System.Windows.DependencyProperty"/>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"/> 的返回值表示转换器没有生成任何值，且绑定将使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/>（如果可用），否则将使用默认值。<see cref="T:System.Windows.Data.Binding"/>.<see cref="F:System.Windows.Data.Binding.DoNothing"/> 的返回值表示绑定不传输值，或不使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> 或默认值。
            </returns>
            <param name="values"><see cref="T:System.Windows.Data.MultiBinding"/> 中源绑定生成的值的数组。值 <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> 表示源绑定没有要提供以进行转换的值。</param><param name="targetType">绑定目标属性的类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Converter.ValueMultiplicativeConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            将绑定目标值转换为源绑定值。
            </summary>
            <returns>
            从目标值转换回源值的值的数组。
            </returns>
            <param name="value">绑定目标生成的值。</param><param name="targetTypes">要转换到的类型数组。数组长度指示为要返回的方法所建议的值的数量与类型。</param><param name="parameter">要使用的转换器参数。</param><param name="culture">要用在转换器中的区域性。</param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.DataGridCommand">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.DataGridCommand.CommandProperty">
            <summary>
            Command to execute on click or double click or mouse down or mouse up event.
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.DataGridCommand.SetCommand(System.Windows.Controls.DataGrid,System.Windows.Input.ICommand)">
            <summary>
            Sets the <see cref="T:System.Windows.Input.ICommand"/> to execute on the return key event.
            </summary>
            <param name="dataGrid"> dependency object to attach command</param>
            <param name="command">Command to attach</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.DataGridCommand.GetCommand(System.Windows.Controls.DataGrid)">
            <summary>
            Retrieves the <see cref="T:System.Windows.Input.ICommand"/> attached to the <see cref="T:System.Windows.Controls.TextBox"/>.
            </summary>
            <param name="dataGrid"> containing the Command dependency property</param>
            <returns>The value of the command attached</returns>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty">
            <summary>
            提供 Margin 的绑定
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.LeftProperty">
            <summary>
            Margin.Left
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.SetLeft(System.Windows.DependencyObject,System.Double)">
            <summary>
            SetLeft
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.GetLeft(System.Windows.DependencyObject)">
            <summary>
            GetLeft
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.RightProperty">
            <summary>
            Margin.Right
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.SetRight(System.Windows.DependencyObject,System.Double)">
            <summary>
            SetRight
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.GetRight(System.Windows.DependencyObject)">
            <summary>
            GetRight
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.TopProperty">
            <summary>
            Margin.Top
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.SetTop(System.Windows.DependencyObject,System.Double)">
            <summary>
            SetTop
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.GetTop(System.Windows.DependencyObject)">
            <summary>
            GetTop
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.BottomProperty">
            <summary>
            Margin.Bottom
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.SetBottom(System.Windows.DependencyObject,System.Double)">
            <summary>
            SetBottom
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.MarginProperty.GetBottom(System.Windows.DependencyObject)">
            <summary>
            GetBottom
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty">
            <summary>
            提供 Padding 的绑定
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.LeftProperty">
            <summary>
            Padding.Left
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.SetLeft(System.Windows.DependencyObject,System.Double)">
            <summary>
            SetLeft
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.GetLeft(System.Windows.DependencyObject)">
            <summary>
            GetLeft
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.RightProperty">
            <summary>
            Padding.Right
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.SetRight(System.Windows.DependencyObject,System.Double)">
            <summary>
            SetRight
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.GetRight(System.Windows.DependencyObject)">
            <summary>
            GetRight
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.TopProperty">
            <summary>
            Padding.Top
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.SetTop(System.Windows.DependencyObject,System.Double)">
            <summary>
            SetTop
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.GetTop(System.Windows.DependencyObject)">
            <summary>
            GetTop
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.BottomProperty">
            <summary>
            Padding.Bottom
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.SetBottom(System.Windows.DependencyObject,System.Double)">
            <summary>
            SetBottom
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Dependency.PaddingProperty.GetBottom(System.Windows.DependencyObject)">
            <summary>
            GetBottom
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Event.ApplicationShutdownEvent">
            <summary>
            程序结束事件
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Event.ApplicationShutdownEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Event.EventArg.DataGridMouseOperatorArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Event.EventArg.DataGridMouseOperatorArgs.#ctor(MMI.Facility.WPFInfrastructure.Event.EventArg.MouseState,System.Data.DataTable,System.Data.DataRow,System.Data.DataColumn,System.Object)">
            <summary>
            
            </summary>
            <param name="mouseState"></param>
            <param name="dataTable"></param>
            <param name="selectedRow"></param>
            <param name="selectedColumn"></param>
            <param name="selectedValue"></param>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.EventArg.DataGridMouseOperatorArgs.MouseState">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.EventArg.DataGridMouseOperatorArgs.DataTable">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.EventArg.DataGridMouseOperatorArgs.SelectedRow">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.EventArg.DataGridMouseOperatorArgs.SelectedColumn">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.EventArg.DataGridMouseOperatorArgs.SelectedValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Event.EventArg.MouseState">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Event.EventArg.MouseState.Click">
            <summary>
            Click
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Event.EventArg.MouseState.DoubleClick">
            <summary>
            DoubleClick
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Event.EventArg.MouseState.Down">
            <summary>
            Down
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Event.EventArg.MouseState.Up">
            <summary>
            Up
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent">
            <summary>
            发送数据请求事件
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args.#ctor(System.String,System.Boolean,MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.DataType)">
            <summary>
            
            </summary>
            <param name="indexString"></param>
            <param name="valueB"></param>
            <param name="dataType"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args.#ctor(System.String,System.Single,MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.DataType)">
            <summary>
            
            </summary>
            <param name="indexString"></param>
            <param name="vaf"></param>
            <param name="dataType"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args.#ctor(System.Int32,System.Boolean,MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.DataType)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="valueB"></param>
            <param name="dataType"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args.#ctor(System.Int32,System.Single,MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.DataType)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="vaf"></param>
            <param name="dataType"></param>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args.Type">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args.IndexString">
            <summary>
            string 型索引
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args.Index">
            <summary>
            int 型索引 
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args.ValueB">
            <summary>
            ValueB
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.Args.ValueF">
            <summary>
            ValueF
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.DataType.InBool">
            <summary>
            InBool
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.DataType.OutBool">
            <summary>
            OutBool
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.DataType.InFloat">
            <summary>
            InFloat
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Event.SendDataRequestEvent.DataType.OutFloat">
            <summary>
            OutFloat
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Event.ViewInitalizeCompletedEvent">
            <summary>
            view 初始化完成
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Event.ViewInitalizeCompletedEventArgs">
            <summary>
            view 初始化完成参数
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Extension.CompositePresentationEventExtension">
            <summary>
            CompositePresentationEvent 扩展
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Extension.CompositePresentationEventExtension.PublishLater``1(Microsoft.Practices.Prism.Events.CompositePresentationEvent{``0},``0,System.Int32)">
            <summary>
            
            </summary>
            <param name="ev"></param>
            <param name="args"></param>
            <param name="laterMillisecondsTimeout">延时时间 默认 100ms </param>
            <typeparam name="TArg"></typeparam>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Interactivity.CommandParameter">
            <summary>
            扩展 CommandParameter, 包含事件的参数
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interactivity.CommandParameter.Sender">
            <summary>
            事件触发源
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interactivity.CommandParameter.EventArgs">
            <summary>
            事件参数
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interactivity.CommandParameter.Parameter">
            <summary>
            Parameter 参数
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Interactivity.InvokeCommandAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Interactivity.InvokeCommandAction.CommandProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interactivity.InvokeCommandAction.Command">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.Interactivity.InvokeCommandAction.CommandParameterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interactivity.InvokeCommandAction.CommandParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interactivity.InvokeCommandAction.CommandName">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Interfaces.ControllerBase`1">
            <summary>
            ControllerBase
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Interfaces.ControllerBase`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Interfaces.ControllerBase`1.#ctor(`0)">
            <summary>
             ViewModel = viewModel;
            </summary>
            <param name="viewModel"></param>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interfaces.ControllerBase`1.ViewModel">
            <summary>
            ViewModel
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Interfaces.ControllerBase`1.Initalize">
            <summary>
            Initalize
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Interfaces.IApplicationService">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interfaces.IApplicationService.ShellWindow">
            <summary>
            根窗口
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interfaces.IApplicationService.MainViewModel">
            <summary>
            主窗口 viewmodel
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interfaces.IApplicationService.ConfigPath">
            <summary>
            配置文件路径
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interfaces.IApplicationService.AppPath">
            <summary>
            程序所在目录
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interfaces.IApplicationService.AddinPath">
            <summary>
            addin 目录
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interfaces.IApplicationService.AddinConfigPath">
            <summary>
            addin/config/ 
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Interfaces.INavigeteParameterProvider">
            <summary>
            导航查询参数 
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Interfaces.INavigeteParameterProvider.ConvertToNavigateParameterUriQuery">
            <summary>
            将此id 转换成导航查询参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Interfaces.IResourceService">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Interfaces.IResourceService.ResourceManager">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Interfaces.ISerializableService">
            <summary>
            序列化服务， 用于保存工程
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Markup.EnumValuesExtension">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Markup.EnumValuesExtension.EnumType">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Markup.EnumValuesExtension.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Markup.EnumValuesExtension.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="enumType"></param>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.MMIMefBootstrapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.MMIMefBootstrapper.CreateShell">
            <summary>Creates the shell or main window of the application.</summary>
            <returns>The shell of the application.</returns>
            <remarks>
            If the returned instance is a <see cref="T:System.Windows.DependencyObject" />, the
            <see cref="T:Microsoft.Practices.Prism.Bootstrapper" /> will attach the default <seealso cref="T:Microsoft.Practices.Prism.Regions.IRegionManager" /> of
            the application in its <see cref="F:Microsoft.Practices.Prism.Regions.RegionManager.RegionManagerProperty" /> attached property
            in order to be able to add regions by using the <seealso cref="F:Microsoft.Practices.Prism.Regions.RegionManager.RegionNameProperty" />
            attached property from XAML.
            </remarks>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.MMIMefBootstrapper.CreateModuleCatalog">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.Prism.Modularity.IModuleCatalog"/> used by Prism.
            </summary>
            <remarks>
            The base implementation returns a new ModuleCatalog.
            </remarks>
            <returns>
            A ConfigurationModuleCatalog.
            </returns>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.MMIMefBootstrapper.CreateLogger">
            <summary>
            Create the <see cref="T:Microsoft.Practices.Prism.Logging.ILoggerFacade" /> used by the bootstrapper. new MMIPrismLogFacade()
            </summary>
            <remarks>The base implementation returns a new TextLogger.</remarks>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.MMIMefBootstrapper.ConfigureAggregateCatalog">
            <summary>
            Configures the <see cref="P:Microsoft.Practices.Prism.MefExtensions.MefBootstrapper.AggregateCatalog" /> used by MEF.
            </summary>
            <remarks>The base implementation does nothing.</remarks>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.MMIMefBootstrapper.ConfigureRegionAdapterMappings">
            <summary>
            Configures the default region adapter mappings to use in the application, in order
            to adapt UI controls defined in XAML to use a region and register it automatically.
            May be overwritten in a derived class to add specific mappings required by the application.
            </summary>
            <returns>The <see cref="T:Microsoft.Practices.Prism.Regions.RegionAdapterMappings" /> instance containing all the mappings.</returns>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.MMIMefBootstrapper.ConfigureDefaultRegionBehaviors">
            <summary>
            Configures the <see cref="T:Microsoft.Practices.Prism.Regions.IRegionBehaviorFactory" />.
            This will be the list of default behaviors that will be added to a region.
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.MMIPrismLogFacade">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Model.DataChangedModel`1">
            <summary>
            数据变化模型
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Model.DataChangedModel`1.#ctor(`0,`0)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Model.DataChangedModel`1.OldValue">
            <summary>
            老的值
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Model.DataChangedModel`1.NewValue">
            <summary>
            新的值
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Model.IndexValueModel`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Model.IndexValueModel`1.Index">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.Model.IndexValueModel`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Model.IndexValueModel`1.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>
            当前 <see cref="T:System.Object"/> 的哈希代码。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Model.IndexValueModel`1.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Model.IndexValueModel`1.Equals(System.Object)">
            <summary>
            确定指定的 <see cref="T:System.Object"/> 是否等于当前的 <see cref="T:System.Object"/>。
            </summary>
            <returns>
            如果指定的 <see cref="T:System.Object"/> 等于当前的 <see cref="T:System.Object"/>，则为 true；否则为 false。
            </returns>
            <param name="obj">与当前的 <see cref="T:System.Object"/> 进行比较的 <see cref="T:System.Object"/>。</param><filterpriority>2</filterpriority>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Model.IndexValueModel`1.Equals(MMI.Facility.WPFInfrastructure.Model.IndexValueModel{`0},MMI.Facility.WPFInfrastructure.Model.IndexValueModel{`0})">
            <summary>
            确定指定的对象是否相等。
            </summary>
            <returns>
            如果指定的对象相等，则为 true；否则为 false。
            </returns>
            <param name="x">要比较的第一个类型为 <paramref>
                    <name>T</name>
                </paramref>
                的对象。</param><param name="y">要比较的第二个类型为 <paramref>
                        <name>T</name>
                    </paramref>
                    的对象。</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Model.IndexValueModel`1.GetHashCode(MMI.Facility.WPFInfrastructure.Model.IndexValueModel{`0})">
            <summary>
            返回指定对象的哈希代码。
            </summary>
            <returns>
            指定对象的哈希代码。
            </returns>
            <param name="obj"><see cref="T:System.Object"/>，将为其返回哈希代码。</param><exception cref="T:System.ArgumentNullException"><paramref name="obj"/> 的类型为引用类型，<paramref name="obj"/> 为 null。</exception>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.Regions.BorderControlRegionAdapter">
            <summary>
            borader 的region 
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Regions.BorderControlRegionAdapter.#ctor(Microsoft.Practices.Prism.Regions.IRegionBehaviorFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.Prism.Regions.ContentControlRegionAdapter"/>.
            </summary>
            <param name="regionBehaviorFactory">The factory used to create the region behaviors to attach to the created regions.</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Regions.BorderControlRegionAdapter.Adapt(Microsoft.Practices.Prism.Regions.IRegion,System.Windows.Controls.Border)">
            <summary>
            Adapts a <see cref="T:System.Windows.Controls.ContentControl"/> to an <see cref="T:Microsoft.Practices.Prism.Regions.IRegion"/>.
            </summary>
            <param name="region">The new region being used.</param>
            <param name="regionTarget">The object to adapt.</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Regions.BorderControlRegionAdapter.CreateRegion">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Practices.Prism.Regions.SingleActiveRegion"/>.
            </summary>
            <returns>A new instance of <see cref="T:Microsoft.Practices.Prism.Regions.SingleActiveRegion"/>.</returns>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.Regions.BorderControlRegionAdapter.OnImportsSatisfied">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.ReturnKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.ReturnKey.CommandProperty">
            <summary>
            Command to execute on return key event.
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.ReturnKey.DefaultTextAfterCommandExecutionProperty">
            <summary>
            Default text to set to the TextBox once the Command has been executed
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.ReturnKey.SetDefaultTextAfterCommandExecution(System.Windows.Controls.TextBox,System.String)">
            <summary>
            Sets the <see cref="T:System.String"/> to set to the TextBox once the Command has been executed.
            </summary>
            <param name="textBox">TextBox dependency object on which the default text will be set after the Command has been executed.</param>
            <param name="defaultText">Default text to set.</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.ReturnKey.GetDefaultTextAfterCommandExecution(System.Windows.Controls.TextBox)">
            <summary>
            Retrieves the default text set to the <see cref="T:System.Windows.Controls.TextBox"/> after the Command has been executed.
            </summary>
            <param name="textBox">TextBox dependency object on which the default text will be set after the Command has been executed.</param>
            <returns>Default text to set.</returns>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.ReturnKey.SetCommand(System.Windows.Controls.TextBox,System.Windows.Input.ICommand)">
            <summary>
            Sets the <see cref="T:System.Windows.Input.ICommand"/> to execute on the return key event.
            </summary>
            <param name="textBox">TextBox dependency object to attach command</param>
            <param name="command">Command to attach</param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.ReturnKey.GetCommand(System.Windows.Controls.TextBox)">
            <summary>
            Retrieves the <see cref="T:System.Windows.Input.ICommand"/> attached to the <see cref="T:System.Windows.Controls.TextBox"/>.
            </summary>
            <param name="textBox">TextBox containing the Command dependency property</param>
            <returns>The value of the command attached</returns>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.ViewModel.IMainViewModel">
            <summary>
            主窗口的
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.ViewModel.IMainViewModel.WindTitle">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.ViewModel.IMainViewModel.WindWidth">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.ViewModel.IMainViewModel.WindHeight">
            <summary>
            高度
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.CaretTextBox">
            <summary>
            CaretTextBox.xaml 的交互逻辑
            </summary>
            <summary>
            CaretTextBox
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.CaretTextBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.CaretTextBox.TextHorizontalAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.CaretTextBox.TextHorizontalAlignment">
            <summary>
            文本框水平对齐方式
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.CaretTextBox.TextVerticalAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.CaretTextBox.TextVerticalAlignment">
            <summary>
            文本框垂直对齐方式
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.CaretTextBox.CaretTextModelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.CaretTextBox.CaretTextModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.CaretTextBox.PasswordMaskCharProperty">
            <summary>
             掩码
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.CaretTextBox.PasswordMaskChar">
            <summary>
            掩码
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.CaretTextBox.AlwaysShowCaretProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.CaretTextBox.AlwaysShowCaret">
            <summary>
            一直显示补字符
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.CaretTextBox.CaretControlProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.CaretTextBox.CaretControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.CaretTextBox.CaretLocationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.CaretTextBox.CaretLocation">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.CaretTextBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.ICaretTextModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.ICaretTextModel.BindableCaretIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.ICaretTextModel.Text">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.CaretLocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.CaretLocation.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.CaretLocation.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.FlickeringDecorator">
            <summary>
            闪烁的装饰器
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.FlickeringDecorator.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.FlickeringDecorator.VisibilityAfterFlickering">
            <summary>
            停止闪烁后的状态
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.FlickeringDecorator.VisibilityAfterFlickeringProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.FlickeringDecorator.DurationSecond">
            <summary>
            闪烁时长
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.FlickeringDecorator.DurationSecondProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.FlickeringDecorator.FlickeringProperty">
            <summary>
            是否闪烁
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.FlickeringDecorator.Flickering">
            <summary>
            是否闪烁
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.FlickerManager">
            <summary>
            闪烁
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.FlickerManager.VisibilityAfterFlickingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.FlickerManager.SetVisibilityAfterFlicking(System.Windows.DependencyObject,System.Windows.Visibility)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.FlickerManager.GetVisibilityAfterFlicking(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.FlickerManager.FlickingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.FlickerManager.DurationMiliSecondProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.FlickerManager.SetDurationMiliSecond(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.FlickerManager.GetDurationMiliSecond(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.FlickerManager.SetFlicking(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.FlickerManager.GetFlicking(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.GridLineStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.GridLineStyle.ShowIfHasControl">
            <summary>
            如果有内容才增加
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.GridLineStyle.ShowAll">
            <summary>
            所有
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.GridLineWidthStyle">
            <summary>
            Gril 线宽度是否相同
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.GridLineWidthStyle.AllLineSame">
            <summary>
            所有线相同宽度
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.GridLineWidthStyle.Different">
            <summary>
            不同
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.GridLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.GridLine.WidthStyleProperty">
            <summary>
            线宽的附加属性
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.GridLine.SetWidthStyle(System.Windows.DependencyObject,MMI.Facility.WPFInfrastructure.View.GridLineWidthStyle)">
            <summary>
            设置线宽样式
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.GridLine.GetWidthStyle(System.Windows.DependencyObject)">
            <summary>
            获取线宽样式
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.GridLine.StyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.GridLine.SetStyle(System.Windows.DependencyObject,MMI.Facility.WPFInfrastructure.View.GridLineStyle)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.GridLine.GetStyle(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.GridLine.BrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.GridLine.SetBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.GridLine.GetBrush(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.GridLine.SetWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.GridLine.GetWidth(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.IconImageClipper">
            <summary>
            图标文件的裁剪
            </summary>
            <summary>
            IconImageClipper
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.IconImageClipper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.IconImageClipper.SelectedIndexProperty">
            <summary>
            当前选中的
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.IconImageClipper.SelectedIndex">
            <summary>
            当前选中的
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.IconImageClipper.ClipCountProperty">
            <summary>
            裁剪个数
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.IconImageClipper.ClipCount">
            <summary>
            裁剪个数
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.IconImageClipper.ImageSourceProperty">
            <summary>
            源图
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.IconImageClipper.ImageSource">
            <summary>
            源图
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.IconImageClipper.ClipIntervalProperty">
            <summary>
            每个裁剪图的间隔
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.IconImageClipper.ClipInterval">
            <summary>
            每个裁剪图的间隔
            </summary>
        </member>
        <member name="F:MMI.Facility.WPFInfrastructure.View.IconImageClipper.OrientationProperty">
            <summary>
            方向
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.IconImageClipper.Orientation">
            <summary>
            方向
            </summary>
        </member>
        <member name="M:MMI.Facility.WPFInfrastructure.View.IconImageClipper.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:MMI.Facility.WPFInfrastructure.View.IFlickeringable">
            <summary>
            可以闪烁的
            </summary>
        </member>
        <member name="P:MMI.Facility.WPFInfrastructure.View.IFlickeringable.Flickering">
            <summary>
            闪烁的
            </summary>
        </member>
        <member name="T:Mmi.Common.Control.WPF.CollapsibleWrapList">
            <summary>
            CollapsibleWrapList
            </summary>
        </member>
        <member name="M:Mmi.Common.Control.WPF.CollapsibleWrapList.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mmi.Common.Control.WPF.CollapsibleWrapList.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Provides derived classes an opportunity to handle changes to the ItemsSource property.
            </summary>
        </member>
        <member name="F:Mmi.Common.Control.WPF.CollapsibleWrapList.HeaderTemplateProperty">
            <summary>
            HeaderTemplate Dependency Property
            </summary>
        </member>
        <member name="P:Mmi.Common.Control.WPF.CollapsibleWrapList.HeaderTemplate">
            <summary>
            Gets or sets the HeaderTemplate property. This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="F:Mmi.Common.Control.WPF.CollapsibleWrapList.HeaderStyleProperty">
            <summary>
            HeaderStyle Dependency Property
            </summary>
        </member>
        <member name="P:Mmi.Common.Control.WPF.CollapsibleWrapList.HeaderStyle">
            <summary>
            Gets or sets the HeaderStyle property. This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="M:Mmi.Common.Control.WPF.CollapsibleWrapList.MeasureOverride(System.Windows.Size)">
            <summary>
            测量 <see cref="T:System.Windows.Controls.WrapPanel"/> 的子元素，以便准备在 <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)"/> 传递过程中排列它们。
            </summary>
            <returns>
            <see cref="T:System.Windows.Size"/>，表示元素的所需大小。
            </returns>
            <param name="availableSize">不应超过的上限 <see cref="T:System.Windows.Size"/>。</param>
        </member>
        <member name="T:Mmi.Common.Control.WPF.WrapList">
            <summary>
            WrapList
            </summary>
        </member>
        <member name="M:Mmi.Common.Control.WPF.WrapList.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mmi.Common.Control.WPF.WrapList.m_ChildernUis">
            <summary>
            子UI
            </summary>
        </member>
        <member name="F:Mmi.Common.Control.WPF.WrapList.m_ItemsChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mmi.Common.Control.WPF.WrapList.ItemTemplateProperty">
            <summary>
            ItemTemplate Dependency Property
            </summary>
        </member>
        <member name="P:Mmi.Common.Control.WPF.WrapList.ItemTemplate">
            <summary>
            Gets or sets the ItemTemplate property. This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="F:Mmi.Common.Control.WPF.WrapList.ItemsSourceProperty">
            <summary>
            ItemsSource Dependency Property
            </summary>
        </member>
        <member name="P:Mmi.Common.Control.WPF.WrapList.ItemsSource">
            <summary>
            Gets or sets the ItemsSource property. This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="M:Mmi.Common.Control.WPF.WrapList.OnItemsSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ItemsSource property.
            </summary>
        </member>
        <member name="M:Mmi.Common.Control.WPF.WrapList.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Provides derived classes an opportunity to handle changes to the ItemsSource property.
            </summary>
        </member>
        <member name="M:Mmi.Common.Control.WPF.WrapList.MeasureOverride(System.Windows.Size)">
            <summary>
            测量 <see cref="T:System.Windows.Controls.WrapPanel"/> 的子元素，以便准备在 <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)"/> 传递过程中排列它们。
            </summary>
            <returns>
            <see cref="T:System.Windows.Size"/>，表示元素的所需大小。
            </returns>
            <param name="constraint">不应超过的上限 <see cref="T:System.Windows.Size"/>。</param>
        </member>
        <member name="T:Mmi.Common.Control.WPF.WrapListGroupHeader">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
